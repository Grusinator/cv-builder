{
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Vote despite light heavy very southern. South Mr agree effect add.\\nSize summer than thousand four likely member. General throw trouble recognize pull before popular.\\n        --------------------\\n        Competencies:        \\n        [\\\"Dr. Terry Clarke MD\\\", \\\"Misty Potter PhD\\\", \\\"Bonnie Watson\\\", \\\"Mr. Javier Pittman\\\", \\\"Dr. Neil Irwin\\\", \\\"Dr. Terry Clarke MD\\\", \\\"Misty Potter PhD\\\", \\\"Bonnie Watson\\\", \\\"Mr. Javier Pittman\\\", \\\"Dr. Neil Irwin\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Decide job health but bill pick. Break color mother education represent cultural Republican word.\\n        --------------------\\n        Competencies:        \\n        [\\\"Carmen Mccarty\\\", \\\"Tanner Brennan\\\", \\\"Randall Padilla\\\", \\\"Eduardo Mcclain\\\", \\\"Ms. Shelley Dougherty DDS\\\", \\\"Carmen Mccarty\\\", \\\"Tanner Brennan\\\", \\\"Randall Padilla\\\", \\\"Eduardo Mcclain\\\", \\\"Ms. Shelley Dougherty DDS\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "_fetch_all_repos__[[\"GitHubProjectsRepository\"], {}]": [
    {
      "id": 105198001,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDUxOTgwMDE=",
      "name": "Aander-android-app",
      "full_name": "Grusinator/Aander-android-app",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/Aander-android-app",
      "description": "kivy",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/Aander-android-app",
      "forks_url": "https://api.github.com/repos/Grusinator/Aander-android-app/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/Aander-android-app/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/Aander-android-app/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/Aander-android-app/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/Aander-android-app/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/Aander-android-app/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/Aander-android-app/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/Aander-android-app/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/Aander-android-app/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/Aander-android-app/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/Aander-android-app/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/Aander-android-app/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/Aander-android-app/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/Aander-android-app/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/Aander-android-app/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/Aander-android-app/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/Aander-android-app/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/Aander-android-app/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/Aander-android-app/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/Aander-android-app/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/Aander-android-app/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/Aander-android-app/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/Aander-android-app/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/Aander-android-app/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/Aander-android-app/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/Aander-android-app/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/Aander-android-app/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/Aander-android-app/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/Aander-android-app/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/Aander-android-app/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/Aander-android-app/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/Aander-android-app/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/Aander-android-app/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/Aander-android-app/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/Aander-android-app/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/Aander-android-app/deployments",
      "created_at": "2017-09-28T20:50:58Z",
      "updated_at": "2017-09-28T20:57:20Z",
      "pushed_at": "2017-09-28T20:56:01Z",
      "git_url": "git://github.com/Grusinator/Aander-android-app.git",
      "ssh_url": "git@github.com:Grusinator/Aander-android-app.git",
      "clone_url": "https://github.com/Grusinator/Aander-android-app.git",
      "svn_url": "https://github.com/Grusinator/Aander-android-app",
      "homepage": null,
      "size": 199255,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 105197951,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDUxOTc5NTE=",
      "name": "Aander-backend",
      "full_name": "Grusinator/Aander-backend",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/Aander-backend",
      "description": "django",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/Aander-backend",
      "forks_url": "https://api.github.com/repos/Grusinator/Aander-backend/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/Aander-backend/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/Aander-backend/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/Aander-backend/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/Aander-backend/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/Aander-backend/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/Aander-backend/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/Aander-backend/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/Aander-backend/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/Aander-backend/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/Aander-backend/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/Aander-backend/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/Aander-backend/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/Aander-backend/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/Aander-backend/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/Aander-backend/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/Aander-backend/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/Aander-backend/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/Aander-backend/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/Aander-backend/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/Aander-backend/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/Aander-backend/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/Aander-backend/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/Aander-backend/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/Aander-backend/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/Aander-backend/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/Aander-backend/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/Aander-backend/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/Aander-backend/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/Aander-backend/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/Aander-backend/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/Aander-backend/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/Aander-backend/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/Aander-backend/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/Aander-backend/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/Aander-backend/deployments",
      "created_at": "2017-09-28T20:50:18Z",
      "updated_at": "2018-04-06T07:30:39Z",
      "pushed_at": "2018-04-06T07:30:38Z",
      "git_url": "git://github.com/Grusinator/Aander-backend.git",
      "ssh_url": "git@github.com:Grusinator/Aander-backend.git",
      "clone_url": "https://github.com/Grusinator/Aander-backend.git",
      "svn_url": "https://github.com/Grusinator/Aander-backend",
      "homepage": null,
      "size": 64,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 105199022,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDUxOTkwMjI=",
      "name": "Aander-ETL",
      "full_name": "Grusinator/Aander-ETL",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/Aander-ETL",
      "description": "data processing",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/Aander-ETL",
      "forks_url": "https://api.github.com/repos/Grusinator/Aander-ETL/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/Aander-ETL/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/Aander-ETL/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/Aander-ETL/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/Aander-ETL/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/Aander-ETL/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/Aander-ETL/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/Aander-ETL/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/Aander-ETL/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/Aander-ETL/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/Aander-ETL/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/Aander-ETL/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/Aander-ETL/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/Aander-ETL/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/Aander-ETL/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/Aander-ETL/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/Aander-ETL/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/Aander-ETL/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/Aander-ETL/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/Aander-ETL/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/Aander-ETL/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/Aander-ETL/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/Aander-ETL/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/Aander-ETL/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/Aander-ETL/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/Aander-ETL/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/Aander-ETL/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/Aander-ETL/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/Aander-ETL/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/Aander-ETL/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/Aander-ETL/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/Aander-ETL/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/Aander-ETL/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/Aander-ETL/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/Aander-ETL/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/Aander-ETL/deployments",
      "created_at": "2017-09-28T21:02:39Z",
      "updated_at": "2017-09-28T21:06:18Z",
      "pushed_at": "2017-09-28T21:08:57Z",
      "git_url": "git://github.com/Grusinator/Aander-ETL.git",
      "ssh_url": "git@github.com:Grusinator/Aander-ETL.git",
      "clone_url": "https://github.com/Grusinator/Aander-ETL.git",
      "svn_url": "https://github.com/Grusinator/Aander-ETL",
      "homepage": null,
      "size": 6843,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Jupyter Notebook",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 1,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 764125978,
      "node_id": "R_kgDOLYujGg",
      "name": "ai-test-project",
      "full_name": "Grusinator/ai-test-project",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/ai-test-project",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/ai-test-project",
      "forks_url": "https://api.github.com/repos/Grusinator/ai-test-project/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/ai-test-project/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/ai-test-project/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/ai-test-project/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/ai-test-project/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/ai-test-project/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/ai-test-project/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/ai-test-project/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/ai-test-project/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/ai-test-project/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/ai-test-project/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/ai-test-project/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/ai-test-project/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/ai-test-project/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/ai-test-project/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/ai-test-project/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/ai-test-project/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/ai-test-project/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/ai-test-project/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/ai-test-project/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/ai-test-project/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/ai-test-project/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/ai-test-project/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/ai-test-project/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/ai-test-project/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/ai-test-project/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/ai-test-project/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/ai-test-project/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/ai-test-project/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/ai-test-project/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/ai-test-project/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/ai-test-project/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/ai-test-project/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/ai-test-project/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/ai-test-project/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/ai-test-project/deployments",
      "created_at": "2024-02-27T14:24:55Z",
      "updated_at": "2024-03-11T07:23:10Z",
      "pushed_at": "2024-03-11T21:31:16Z",
      "git_url": "git://github.com/Grusinator/ai-test-project.git",
      "ssh_url": "git@github.com:Grusinator/ai-test-project.git",
      "clone_url": "https://github.com/Grusinator/ai-test-project.git",
      "svn_url": "https://github.com/Grusinator/ai-test-project",
      "homepage": null,
      "size": 3,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 1,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 104995914,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDQ5OTU5MTQ=",
      "name": "BirdClassification",
      "full_name": "Grusinator/BirdClassification",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/BirdClassification",
      "description": "image segmentation of birds",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/BirdClassification",
      "forks_url": "https://api.github.com/repos/Grusinator/BirdClassification/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/BirdClassification/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/BirdClassification/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/BirdClassification/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/BirdClassification/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/BirdClassification/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/BirdClassification/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/BirdClassification/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/BirdClassification/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/BirdClassification/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/BirdClassification/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/BirdClassification/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/BirdClassification/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/BirdClassification/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/BirdClassification/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/BirdClassification/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/BirdClassification/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/BirdClassification/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/BirdClassification/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/BirdClassification/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/BirdClassification/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/BirdClassification/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/BirdClassification/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/BirdClassification/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/BirdClassification/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/BirdClassification/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/BirdClassification/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/BirdClassification/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/BirdClassification/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/BirdClassification/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/BirdClassification/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/BirdClassification/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/BirdClassification/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/BirdClassification/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/BirdClassification/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/BirdClassification/deployments",
      "created_at": "2017-09-27T08:57:53Z",
      "updated_at": "2018-04-16T19:01:48Z",
      "pushed_at": "2017-10-09T12:20:42Z",
      "git_url": "git://github.com/Grusinator/BirdClassification.git",
      "ssh_url": "git@github.com:Grusinator/BirdClassification.git",
      "clone_url": "https://github.com/Grusinator/BirdClassification.git",
      "svn_url": "https://github.com/Grusinator/BirdClassification",
      "homepage": null,
      "size": 34912,
      "stargazers_count": 1,
      "watchers_count": 1,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 1,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 677663490,
      "node_id": "R_kgDOKGRTAg",
      "name": "build-it",
      "full_name": "Grusinator/build-it",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/build-it",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/build-it",
      "forks_url": "https://api.github.com/repos/Grusinator/build-it/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/build-it/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/build-it/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/build-it/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/build-it/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/build-it/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/build-it/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/build-it/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/build-it/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/build-it/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/build-it/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/build-it/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/build-it/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/build-it/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/build-it/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/build-it/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/build-it/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/build-it/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/build-it/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/build-it/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/build-it/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/build-it/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/build-it/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/build-it/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/build-it/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/build-it/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/build-it/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/build-it/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/build-it/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/build-it/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/build-it/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/build-it/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/build-it/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/build-it/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/build-it/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/build-it/deployments",
      "created_at": "2023-08-12T08:03:30Z",
      "updated_at": "2023-08-12T11:23:25Z",
      "pushed_at": "2023-08-12T11:23:21Z",
      "git_url": "git://github.com/Grusinator/build-it.git",
      "ssh_url": "git@github.com:Grusinator/build-it.git",
      "clone_url": "https://github.com/Grusinator/build-it.git",
      "svn_url": "https://github.com/Grusinator/build-it",
      "homepage": null,
      "size": 10,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 61641680,
      "node_id": "MDEwOlJlcG9zaXRvcnk2MTY0MTY4MA==",
      "name": "ChangeDetection",
      "full_name": "Grusinator/ChangeDetection",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/ChangeDetection",
      "description": "Change detection program including IRMAD, MM, MRF etc. python",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/ChangeDetection",
      "forks_url": "https://api.github.com/repos/Grusinator/ChangeDetection/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/ChangeDetection/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/ChangeDetection/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/ChangeDetection/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/ChangeDetection/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/ChangeDetection/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/ChangeDetection/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/ChangeDetection/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/ChangeDetection/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/ChangeDetection/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/ChangeDetection/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/ChangeDetection/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/ChangeDetection/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/ChangeDetection/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/ChangeDetection/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/ChangeDetection/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/ChangeDetection/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/ChangeDetection/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/ChangeDetection/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/ChangeDetection/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/ChangeDetection/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/ChangeDetection/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/ChangeDetection/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/ChangeDetection/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/ChangeDetection/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/ChangeDetection/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/ChangeDetection/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/ChangeDetection/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/ChangeDetection/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/ChangeDetection/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/ChangeDetection/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/ChangeDetection/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/ChangeDetection/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/ChangeDetection/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/ChangeDetection/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/ChangeDetection/deployments",
      "created_at": "2016-06-21T14:42:15Z",
      "updated_at": "2023-10-30T05:31:11Z",
      "pushed_at": "2016-07-03T08:32:10Z",
      "git_url": "git://github.com/Grusinator/ChangeDetection.git",
      "ssh_url": "git@github.com:Grusinator/ChangeDetection.git",
      "clone_url": "https://github.com/Grusinator/ChangeDetection.git",
      "svn_url": "https://github.com/Grusinator/ChangeDetection",
      "homepage": null,
      "size": 9,
      "stargazers_count": 10,
      "watchers_count": 10,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 5,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 5,
      "open_issues": 0,
      "watchers": 10,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 674955653,
      "node_id": "R_kgDOKDsBhQ",
      "name": "co-opinion",
      "full_name": "Grusinator/co-opinion",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/co-opinion",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/co-opinion",
      "forks_url": "https://api.github.com/repos/Grusinator/co-opinion/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/co-opinion/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/co-opinion/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/co-opinion/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/co-opinion/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/co-opinion/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/co-opinion/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/co-opinion/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/co-opinion/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/co-opinion/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/co-opinion/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/co-opinion/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/co-opinion/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/co-opinion/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/co-opinion/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/co-opinion/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/co-opinion/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/co-opinion/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/co-opinion/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/co-opinion/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/co-opinion/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/co-opinion/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/co-opinion/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/co-opinion/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/co-opinion/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/co-opinion/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/co-opinion/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/co-opinion/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/co-opinion/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/co-opinion/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/co-opinion/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/co-opinion/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/co-opinion/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/co-opinion/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/co-opinion/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/co-opinion/deployments",
      "created_at": "2023-08-05T09:40:39Z",
      "updated_at": "2023-08-05T09:59:01Z",
      "pushed_at": "2023-11-29T15:17:46Z",
      "git_url": "git://github.com/Grusinator/co-opinion.git",
      "ssh_url": "git@github.com:Grusinator/co-opinion.git",
      "clone_url": "https://github.com/Grusinator/co-opinion.git",
      "svn_url": "https://github.com/Grusinator/co-opinion",
      "homepage": null,
      "size": 638,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "TypeScript",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 801004801,
      "node_id": "R_kgDOL75dAQ",
      "name": "cv-builder",
      "full_name": "Grusinator/cv-builder",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/cv-builder",
      "description": "This project automates the cv building process using latex, ai and data",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/cv-builder",
      "forks_url": "https://api.github.com/repos/Grusinator/cv-builder/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/cv-builder/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/cv-builder/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/cv-builder/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/cv-builder/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/cv-builder/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/cv-builder/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/cv-builder/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/cv-builder/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/cv-builder/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/cv-builder/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/cv-builder/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/cv-builder/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/cv-builder/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/cv-builder/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/cv-builder/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/cv-builder/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/cv-builder/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/cv-builder/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/cv-builder/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/cv-builder/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/cv-builder/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/cv-builder/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/cv-builder/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/cv-builder/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/cv-builder/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/cv-builder/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/cv-builder/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/cv-builder/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/cv-builder/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/cv-builder/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/cv-builder/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/cv-builder/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/cv-builder/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/cv-builder/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/cv-builder/deployments",
      "created_at": "2024-05-15T12:17:41Z",
      "updated_at": "2024-06-13T10:18:03Z",
      "pushed_at": "2024-06-13T10:18:00Z",
      "git_url": "git://github.com/Grusinator/cv-builder.git",
      "ssh_url": "git@github.com:Grusinator/cv-builder.git",
      "clone_url": "https://github.com/Grusinator/cv-builder.git",
      "svn_url": "https://github.com/Grusinator/cv-builder",
      "homepage": "",
      "size": 4714,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 758187298,
      "node_id": "R_kgDOLTEFIg",
      "name": "development-workforce",
      "full_name": "Grusinator/development-workforce",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/development-workforce",
      "description": "experimentation on how to integrate ai agents into existing software development setup. ",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/development-workforce",
      "forks_url": "https://api.github.com/repos/Grusinator/development-workforce/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/development-workforce/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/development-workforce/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/development-workforce/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/development-workforce/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/development-workforce/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/development-workforce/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/development-workforce/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/development-workforce/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/development-workforce/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/development-workforce/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/development-workforce/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/development-workforce/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/development-workforce/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/development-workforce/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/development-workforce/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/development-workforce/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/development-workforce/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/development-workforce/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/development-workforce/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/development-workforce/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/development-workforce/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/development-workforce/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/development-workforce/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/development-workforce/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/development-workforce/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/development-workforce/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/development-workforce/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/development-workforce/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/development-workforce/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/development-workforce/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/development-workforce/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/development-workforce/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/development-workforce/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/development-workforce/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/development-workforce/deployments",
      "created_at": "2024-02-15T19:47:19Z",
      "updated_at": "2024-05-29T17:19:47Z",
      "pushed_at": "2024-03-12T11:16:00Z",
      "git_url": "git://github.com/Grusinator/development-workforce.git",
      "ssh_url": "git@github.com:Grusinator/development-workforce.git",
      "clone_url": "https://github.com/Grusinator/development-workforce.git",
      "svn_url": "https://github.com/Grusinator/development-workforce",
      "homepage": "",
      "size": 91,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "ai",
        "azuredevops",
        "llm",
        "python"
      ],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 340602769,
      "node_id": "MDEwOlJlcG9zaXRvcnkzNDA2MDI3Njk=",
      "name": "django-celery-model",
      "full_name": "Grusinator/django-celery-model",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/django-celery-model",
      "description": "Keep track of Celery tasks assigned to Django models",
      "fork": true,
      "url": "https://api.github.com/repos/Grusinator/django-celery-model",
      "forks_url": "https://api.github.com/repos/Grusinator/django-celery-model/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/django-celery-model/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/django-celery-model/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/django-celery-model/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/django-celery-model/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/django-celery-model/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/django-celery-model/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/django-celery-model/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/django-celery-model/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/django-celery-model/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/django-celery-model/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/django-celery-model/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/django-celery-model/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/django-celery-model/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/django-celery-model/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/django-celery-model/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/django-celery-model/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/django-celery-model/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/django-celery-model/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/django-celery-model/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/django-celery-model/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/django-celery-model/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/django-celery-model/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/django-celery-model/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/django-celery-model/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/django-celery-model/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/django-celery-model/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/django-celery-model/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/django-celery-model/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/django-celery-model/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/django-celery-model/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/django-celery-model/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/django-celery-model/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/django-celery-model/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/django-celery-model/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/django-celery-model/deployments",
      "created_at": "2021-02-20T08:29:14Z",
      "updated_at": "2021-02-20T08:29:15Z",
      "pushed_at": "2021-02-02T22:01:47Z",
      "git_url": "git://github.com/Grusinator/django-celery-model.git",
      "ssh_url": "git@github.com:Grusinator/django-celery-model.git",
      "clone_url": "https://github.com/Grusinator/django-celery-model.git",
      "svn_url": "https://github.com/Grusinator/django-celery-model",
      "homepage": "",
      "size": 65,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": null,
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 227077418,
      "node_id": "MDEwOlJlcG9zaXRvcnkyMjcwNzc0MTg=",
      "name": "django-generic-serializer",
      "full_name": "Grusinator/django-generic-serializer",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/django-generic-serializer",
      "description": "django base class for generic serialization of model",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/django-generic-serializer",
      "forks_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/django-generic-serializer/deployments",
      "created_at": "2019-12-10T09:24:17Z",
      "updated_at": "2020-02-24T11:29:22Z",
      "pushed_at": "2021-06-10T18:03:35Z",
      "git_url": "git://github.com/Grusinator/django-generic-serializer.git",
      "ssh_url": "git@github.com:Grusinator/django-generic-serializer.git",
      "clone_url": "https://github.com/Grusinator/django-generic-serializer.git",
      "svn_url": "https://github.com/Grusinator/django-generic-serializer",
      "homepage": null,
      "size": 50,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 3,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 3,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 224200623,
      "node_id": "MDEwOlJlcG9zaXRvcnkyMjQyMDA2MjM=",
      "name": "django-json2model",
      "full_name": "Grusinator/django-json2model",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/django-json2model",
      "description": "create django models dynamically from json data structures",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/django-json2model",
      "forks_url": "https://api.github.com/repos/Grusinator/django-json2model/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/django-json2model/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/django-json2model/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/django-json2model/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/django-json2model/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/django-json2model/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/django-json2model/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/django-json2model/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/django-json2model/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/django-json2model/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/django-json2model/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/django-json2model/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/django-json2model/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/django-json2model/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/django-json2model/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/django-json2model/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/django-json2model/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/django-json2model/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/django-json2model/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/django-json2model/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/django-json2model/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/django-json2model/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/django-json2model/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/django-json2model/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/django-json2model/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/django-json2model/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/django-json2model/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/django-json2model/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/django-json2model/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/django-json2model/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/django-json2model/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/django-json2model/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/django-json2model/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/django-json2model/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/django-json2model/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/django-json2model/deployments",
      "created_at": "2019-11-26T13:37:40Z",
      "updated_at": "2021-02-27T07:12:57Z",
      "pushed_at": "2021-02-27T07:59:34Z",
      "git_url": "git://github.com/Grusinator/django-json2model.git",
      "ssh_url": "git@github.com:Grusinator/django-json2model.git",
      "clone_url": "https://github.com/Grusinator/django-json2model.git",
      "svn_url": "https://github.com/Grusinator/django-json2model",
      "homepage": null,
      "size": 467,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 286091933,
      "node_id": "MDEwOlJlcG9zaXRvcnkyODYwOTE5MzM=",
      "name": "django-mutant",
      "full_name": "Grusinator/django-mutant",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/django-mutant",
      "description": "Dynamic model definition and alteration (evolving schemas)",
      "fork": true,
      "url": "https://api.github.com/repos/Grusinator/django-mutant",
      "forks_url": "https://api.github.com/repos/Grusinator/django-mutant/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/django-mutant/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/django-mutant/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/django-mutant/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/django-mutant/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/django-mutant/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/django-mutant/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/django-mutant/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/django-mutant/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/django-mutant/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/django-mutant/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/django-mutant/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/django-mutant/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/django-mutant/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/django-mutant/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/django-mutant/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/django-mutant/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/django-mutant/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/django-mutant/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/django-mutant/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/django-mutant/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/django-mutant/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/django-mutant/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/django-mutant/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/django-mutant/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/django-mutant/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/django-mutant/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/django-mutant/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/django-mutant/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/django-mutant/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/django-mutant/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/django-mutant/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/django-mutant/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/django-mutant/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/django-mutant/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/django-mutant/deployments",
      "created_at": "2020-08-08T17:49:30Z",
      "updated_at": "2021-02-20T08:41:25Z",
      "pushed_at": "2021-02-20T08:41:22Z",
      "git_url": "git://github.com/Grusinator/django-mutant.git",
      "ssh_url": "git@github.com:Grusinator/django-mutant.git",
      "clone_url": "https://github.com/Grusinator/django-mutant.git",
      "svn_url": "https://github.com/Grusinator/django-mutant",
      "homepage": "https://pypi.python.org/pypi/django-mutant",
      "size": 807,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 59366244,
      "node_id": "MDEwOlJlcG9zaXRvcnk1OTM2NjI0NA==",
      "name": "GeoFileHandle",
      "full_name": "Grusinator/GeoFileHandle",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/GeoFileHandle",
      "description": "personal library for GDAL and OGR abstaction",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/GeoFileHandle",
      "forks_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/GeoFileHandle/deployments",
      "created_at": "2016-05-21T15:10:31Z",
      "updated_at": "2023-01-28T16:59:34Z",
      "pushed_at": "2016-05-21T15:11:20Z",
      "git_url": "git://github.com/Grusinator/GeoFileHandle.git",
      "ssh_url": "git@github.com:Grusinator/GeoFileHandle.git",
      "clone_url": "https://github.com/Grusinator/GeoFileHandle.git",
      "svn_url": "https://github.com/Grusinator/GeoFileHandle",
      "homepage": null,
      "size": 6,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": true,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 557774121,
      "node_id": "R_kgDOIT71KQ",
      "name": "gotta-process-em-all",
      "full_name": "Grusinator/gotta-process-em-all",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/gotta-process-em-all",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/gotta-process-em-all",
      "forks_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/gotta-process-em-all/deployments",
      "created_at": "2022-10-26T09:23:57Z",
      "updated_at": "2022-10-26T14:13:48Z",
      "pushed_at": "2022-10-26T14:17:10Z",
      "git_url": "git://github.com/Grusinator/gotta-process-em-all.git",
      "ssh_url": "git@github.com:Grusinator/gotta-process-em-all.git",
      "clone_url": "https://github.com/Grusinator/gotta-process-em-all.git",
      "svn_url": "https://github.com/Grusinator/gotta-process-em-all",
      "homepage": null,
      "size": 302,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 754585510,
      "node_id": "R_kgDOLPoPpg",
      "name": "HuntingTrainerVR",
      "full_name": "Grusinator/HuntingTrainerVR",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/HuntingTrainerVR",
      "description": "a VR hunting simulator for practice, not for fun. ",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR",
      "forks_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/HuntingTrainerVR/deployments",
      "created_at": "2024-02-08T11:18:30Z",
      "updated_at": "2024-05-29T18:05:16Z",
      "pushed_at": "2024-04-06T20:08:50Z",
      "git_url": "git://github.com/Grusinator/HuntingTrainerVR.git",
      "ssh_url": "git@github.com:Grusinator/HuntingTrainerVR.git",
      "clone_url": "https://github.com/Grusinator/HuntingTrainerVR.git",
      "svn_url": "https://github.com/Grusinator/HuntingTrainerVR",
      "homepage": "",
      "size": 52292,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "ShaderLab",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "other",
        "name": "Other",
        "spdx_id": "NOASSERTION",
        "url": null,
        "node_id": "MDc6TGljZW5zZTA="
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "hunting",
        "unity3d",
        "vr"
      ],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 156883471,
      "node_id": "MDEwOlJlcG9zaXRvcnkxNTY4ODM0NzE=",
      "name": "meta-data-client",
      "full_name": "Grusinator/meta-data-client",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/meta-data-client",
      "description": "python client for meta-data-api",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/meta-data-client",
      "forks_url": "https://api.github.com/repos/Grusinator/meta-data-client/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/meta-data-client/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/meta-data-client/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/meta-data-client/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/meta-data-client/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/meta-data-client/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/meta-data-client/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/meta-data-client/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/meta-data-client/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/meta-data-client/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/meta-data-client/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/meta-data-client/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/meta-data-client/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/meta-data-client/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/meta-data-client/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/meta-data-client/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/meta-data-client/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/meta-data-client/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/meta-data-client/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/meta-data-client/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/meta-data-client/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/meta-data-client/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/meta-data-client/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/meta-data-client/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/meta-data-client/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/meta-data-client/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/meta-data-client/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/meta-data-client/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/meta-data-client/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/meta-data-client/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/meta-data-client/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/meta-data-client/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/meta-data-client/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/meta-data-client/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/meta-data-client/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/meta-data-client/deployments",
      "created_at": "2018-11-09T15:48:38Z",
      "updated_at": "2020-02-20T12:47:49Z",
      "pushed_at": "2022-12-08T03:13:30Z",
      "git_url": "git://github.com/Grusinator/meta-data-client.git",
      "ssh_url": "git@github.com:Grusinator/meta-data-client.git",
      "clone_url": "https://github.com/Grusinator/meta-data-client.git",
      "svn_url": "https://github.com/Grusinator/meta-data-client",
      "homepage": null,
      "size": 324,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Jupyter Notebook",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 9,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 9,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 149087967,
      "node_id": "MDEwOlJlcG9zaXRvcnkxNDkwODc5Njc=",
      "name": "MetaDataApi",
      "full_name": "Grusinator/MetaDataApi",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/MetaDataApi",
      "description": "Platform to fetch personal data from providers using Oauth. ",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/MetaDataApi",
      "forks_url": "https://api.github.com/repos/Grusinator/MetaDataApi/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/MetaDataApi/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/MetaDataApi/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/MetaDataApi/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/MetaDataApi/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/MetaDataApi/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/MetaDataApi/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/MetaDataApi/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/MetaDataApi/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/MetaDataApi/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/MetaDataApi/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/MetaDataApi/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/MetaDataApi/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/MetaDataApi/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/MetaDataApi/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/MetaDataApi/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/MetaDataApi/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/MetaDataApi/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/MetaDataApi/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/MetaDataApi/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/MetaDataApi/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/MetaDataApi/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/MetaDataApi/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/MetaDataApi/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/MetaDataApi/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/MetaDataApi/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/MetaDataApi/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/MetaDataApi/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/MetaDataApi/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/MetaDataApi/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/MetaDataApi/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/MetaDataApi/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/MetaDataApi/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/MetaDataApi/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/MetaDataApi/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/MetaDataApi/deployments",
      "created_at": "2018-09-17T07:45:09Z",
      "updated_at": "2024-05-29T18:06:30Z",
      "pushed_at": "2023-07-25T15:39:12Z",
      "git_url": "git://github.com/Grusinator/MetaDataApi.git",
      "ssh_url": "git@github.com:Grusinator/MetaDataApi.git",
      "clone_url": "https://github.com/Grusinator/MetaDataApi.git",
      "svn_url": "https://github.com/Grusinator/MetaDataApi",
      "homepage": "",
      "size": 10287,
      "stargazers_count": 4,
      "watchers_count": 4,
      "language": "CSS",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 1,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 17,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "django",
        "oath2",
        "python3",
        "rest-api"
      ],
      "visibility": "public",
      "forks": 1,
      "open_issues": 17,
      "watchers": 4,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 59366028,
      "node_id": "MDEwOlJlcG9zaXRvcnk1OTM2NjAyOA==",
      "name": "NaGeoS_lib",
      "full_name": "Grusinator/NaGeoS_lib",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/NaGeoS_lib",
      "description": "National geofencing system written in python",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/NaGeoS_lib",
      "forks_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/NaGeoS_lib/deployments",
      "created_at": "2016-05-21T15:06:58Z",
      "updated_at": "2023-01-28T16:59:34Z",
      "pushed_at": "2016-05-21T15:08:03Z",
      "git_url": "git://github.com/Grusinator/NaGeoS_lib.git",
      "ssh_url": "git@github.com:Grusinator/NaGeoS_lib.git",
      "clone_url": "https://github.com/Grusinator/NaGeoS_lib.git",
      "svn_url": "https://github.com/Grusinator/NaGeoS_lib",
      "homepage": null,
      "size": 2,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": true,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 616138486,
      "node_id": "R_kgDOJLmG9g",
      "name": "open-collective",
      "full_name": "Grusinator/open-collective",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/open-collective",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/open-collective",
      "forks_url": "https://api.github.com/repos/Grusinator/open-collective/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/open-collective/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/open-collective/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/open-collective/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/open-collective/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/open-collective/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/open-collective/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/open-collective/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/open-collective/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/open-collective/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/open-collective/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/open-collective/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/open-collective/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/open-collective/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/open-collective/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/open-collective/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/open-collective/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/open-collective/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/open-collective/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/open-collective/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/open-collective/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/open-collective/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/open-collective/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/open-collective/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/open-collective/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/open-collective/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/open-collective/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/open-collective/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/open-collective/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/open-collective/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/open-collective/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/open-collective/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/open-collective/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/open-collective/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/open-collective/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/open-collective/deployments",
      "created_at": "2023-03-19T18:07:32Z",
      "updated_at": "2023-03-19T19:19:41Z",
      "pushed_at": "2023-08-05T06:16:17Z",
      "git_url": "git://github.com/Grusinator/open-collective.git",
      "ssh_url": "git@github.com:Grusinator/open-collective.git",
      "clone_url": "https://github.com/Grusinator/open-collective.git",
      "svn_url": "https://github.com/Grusinator/open-collective",
      "homepage": null,
      "size": 59,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": true,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "main",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 262946413,
      "node_id": "MDEwOlJlcG9zaXRvcnkyNjI5NDY0MTM=",
      "name": "optimize-life",
      "full_name": "Grusinator/optimize-life",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/optimize-life",
      "description": "simple toy project to do simple economic calculations based on choices in life related to house, job, pension, investments etc",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/optimize-life",
      "forks_url": "https://api.github.com/repos/Grusinator/optimize-life/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/optimize-life/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/optimize-life/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/optimize-life/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/optimize-life/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/optimize-life/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/optimize-life/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/optimize-life/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/optimize-life/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/optimize-life/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/optimize-life/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/optimize-life/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/optimize-life/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/optimize-life/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/optimize-life/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/optimize-life/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/optimize-life/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/optimize-life/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/optimize-life/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/optimize-life/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/optimize-life/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/optimize-life/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/optimize-life/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/optimize-life/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/optimize-life/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/optimize-life/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/optimize-life/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/optimize-life/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/optimize-life/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/optimize-life/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/optimize-life/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/optimize-life/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/optimize-life/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/optimize-life/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/optimize-life/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/optimize-life/deployments",
      "created_at": "2020-05-11T05:24:29Z",
      "updated_at": "2024-05-29T17:20:50Z",
      "pushed_at": "2023-01-09T11:39:46Z",
      "git_url": "git://github.com/Grusinator/optimize-life.git",
      "ssh_url": "git@github.com:Grusinator/optimize-life.git",
      "clone_url": "https://github.com/Grusinator/optimize-life.git",
      "svn_url": "https://github.com/Grusinator/optimize-life",
      "homepage": "",
      "size": 54,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [
        "economy",
        "panel",
        "visualization"
      ],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 140387840,
      "node_id": "MDEwOlJlcG9zaXRvcnkxNDAzODc4NDA=",
      "name": "personal-data-api",
      "full_name": "Grusinator/personal-data-api",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/personal-data-api",
      "description": "django graphql api that serves a variety of personal data",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/personal-data-api",
      "forks_url": "https://api.github.com/repos/Grusinator/personal-data-api/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/personal-data-api/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/personal-data-api/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/personal-data-api/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/personal-data-api/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/personal-data-api/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/personal-data-api/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/personal-data-api/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/personal-data-api/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/personal-data-api/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/personal-data-api/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/personal-data-api/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/personal-data-api/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/personal-data-api/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/personal-data-api/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/personal-data-api/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/personal-data-api/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/personal-data-api/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/personal-data-api/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/personal-data-api/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/personal-data-api/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/personal-data-api/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/personal-data-api/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/personal-data-api/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/personal-data-api/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/personal-data-api/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/personal-data-api/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/personal-data-api/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/personal-data-api/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/personal-data-api/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/personal-data-api/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/personal-data-api/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/personal-data-api/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/personal-data-api/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/personal-data-api/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/personal-data-api/deployments",
      "created_at": "2018-07-10T06:33:55Z",
      "updated_at": "2023-01-28T18:07:33Z",
      "pushed_at": "2018-10-19T07:42:39Z",
      "git_url": "git://github.com/Grusinator/personal-data-api.git",
      "ssh_url": "git@github.com:Grusinator/personal-data-api.git",
      "clone_url": "https://github.com/Grusinator/personal-data-api.git",
      "svn_url": "https://github.com/Grusinator/personal-data-api",
      "homepage": null,
      "size": 15515,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": true,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 142669439,
      "node_id": "MDEwOlJlcG9zaXRvcnkxNDI2Njk0Mzk=",
      "name": "PersonalDataApp",
      "full_name": "Grusinator/PersonalDataApp",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/PersonalDataApp",
      "description": "xamarin app that records data and stores in backend",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/PersonalDataApp",
      "forks_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/PersonalDataApp/deployments",
      "created_at": "2018-07-28T10:44:36Z",
      "updated_at": "2018-08-19T19:58:12Z",
      "pushed_at": "2018-08-31T10:14:58Z",
      "git_url": "git://github.com/Grusinator/PersonalDataApp.git",
      "ssh_url": "git@github.com:Grusinator/PersonalDataApp.git",
      "clone_url": "https://github.com/Grusinator/PersonalDataApp.git",
      "svn_url": "https://github.com/Grusinator/PersonalDataApp",
      "homepage": null,
      "size": 1037,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "C#",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 213691956,
      "node_id": "MDEwOlJlcG9zaXRvcnkyMTM2OTE5NTY=",
      "name": "rpi-window-controller",
      "full_name": "Grusinator/rpi-window-controller",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/rpi-window-controller",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/rpi-window-controller",
      "forks_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/rpi-window-controller/deployments",
      "created_at": "2019-10-08T16:12:20Z",
      "updated_at": "2019-12-07T11:03:48Z",
      "pushed_at": "2019-12-07T11:03:46Z",
      "git_url": "git://github.com/Grusinator/rpi-window-controller.git",
      "ssh_url": "git@github.com:Grusinator/rpi-window-controller.git",
      "clone_url": "https://github.com/Grusinator/rpi-window-controller.git",
      "svn_url": "https://github.com/Grusinator/rpi-window-controller",
      "homepage": null,
      "size": 19,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 107668647,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDc2Njg2NDc=",
      "name": "RPI_wildlife_tracker",
      "full_name": "Grusinator/RPI_wildlife_tracker",
      "private": false,
      "owner": {
        "login": "Grusinator",
        "id": 11134858,
        "node_id": "MDQ6VXNlcjExMTM0ODU4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11134858?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Grusinator",
        "html_url": "https://github.com/Grusinator",
        "followers_url": "https://api.github.com/users/Grusinator/followers",
        "following_url": "https://api.github.com/users/Grusinator/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grusinator/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Grusinator/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grusinator/subscriptions",
        "organizations_url": "https://api.github.com/users/Grusinator/orgs",
        "repos_url": "https://api.github.com/users/Grusinator/repos",
        "events_url": "https://api.github.com/users/Grusinator/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Grusinator/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/Grusinator/RPI_wildlife_tracker",
      "description": "track wildlife using raspberry pi",
      "fork": false,
      "url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker",
      "forks_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/forks",
      "keys_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/teams",
      "hooks_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/hooks",
      "issue_events_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/issues/events{/number}",
      "events_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/events",
      "assignees_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/assignees{/user}",
      "branches_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/branches{/branch}",
      "tags_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/tags",
      "blobs_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/languages",
      "stargazers_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/stargazers",
      "contributors_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/contributors",
      "subscribers_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/subscribers",
      "subscription_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/subscription",
      "commits_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/contents/{+path}",
      "compare_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/merges",
      "archive_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/downloads",
      "issues_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/issues{/number}",
      "pulls_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/labels{/name}",
      "releases_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/releases{/id}",
      "deployments_url": "https://api.github.com/repos/Grusinator/RPI_wildlife_tracker/deployments",
      "created_at": "2017-10-20T11:11:22Z",
      "updated_at": "2018-02-04T16:52:28Z",
      "pushed_at": "2017-12-02T21:28:14Z",
      "git_url": "git://github.com/Grusinator/RPI_wildlife_tracker.git",
      "ssh_url": "git@github.com:Grusinator/RPI_wildlife_tracker.git",
      "clone_url": "https://github.com/Grusinator/RPI_wildlife_tracker.git",
      "svn_url": "https://github.com/Grusinator/RPI_wildlife_tracker",
      "homepage": "",
      "size": 15988,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Python",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      }
    },
    {
      "id": 179430471,
      "node_id": "MDEwOlJlcG9zaXRvcnkxNzk0MzA0NzE=",
      "name": "EITC-route-planning",
      "full_name": "mhthNet/EITC-route-planning",
      "private": false,
      "owner": {
        "login": "mhthNet",
        "id": 49264541,
        "node_id": "MDQ6VXNlcjQ5MjY0NTQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/49264541?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mhthNet",
        "html_url": "https://github.com/mhthNet",
        "followers_url": "https://api.github.com/users/mhthNet/followers",
        "following_url": "https://api.github.com/users/mhthNet/following{/other_user}",
        "gists_url": "https://api.github.com/users/mhthNet/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mhthNet/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mhthNet/subscriptions",
        "organizations_url": "https://api.github.com/users/mhthNet/orgs",
        "repos_url": "https://api.github.com/users/mhthNet/repos",
        "events_url": "https://api.github.com/users/mhthNet/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mhthNet/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/mhthNet/EITC-route-planning",
      "description": null,
      "fork": false,
      "url": "https://api.github.com/repos/mhthNet/EITC-route-planning",
      "forks_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/forks",
      "keys_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/teams",
      "hooks_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/hooks",
      "issue_events_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/issues/events{/number}",
      "events_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/events",
      "assignees_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/assignees{/user}",
      "branches_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/branches{/branch}",
      "tags_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/tags",
      "blobs_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/languages",
      "stargazers_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/stargazers",
      "contributors_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/contributors",
      "subscribers_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/subscribers",
      "subscription_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/subscription",
      "commits_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/contents/{+path}",
      "compare_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/merges",
      "archive_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/downloads",
      "issues_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/issues{/number}",
      "pulls_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/labels{/name}",
      "releases_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/releases{/id}",
      "deployments_url": "https://api.github.com/repos/mhthNet/EITC-route-planning/deployments",
      "created_at": "2019-04-04T05:52:14Z",
      "updated_at": "2024-05-17T10:15:11Z",
      "pushed_at": "2019-04-05T08:24:10Z",
      "git_url": "git://github.com/mhthNet/EITC-route-planning.git",
      "ssh_url": "git@github.com:mhthNet/EITC-route-planning.git",
      "clone_url": "https://github.com/mhthNet/EITC-route-planning.git",
      "svn_url": "https://github.com/mhthNet/EITC-route-planning",
      "homepage": null,
      "size": 47953,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "JavaScript",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": false,
        "maintain": false,
        "push": true,
        "triage": true,
        "pull": true
      }
    }
  ],
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-android-app\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-android-app\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-android-app\"], {}]": {
    "Python": 87551152,
    "C": 59676931,
    "Makefile": 7398481,
    "Shell": 3787415,
    "C++": 1388150,
    "Objective-C": 1111803,
    "Assembly": 699834,
    "TeX": 464873,
    "HTML": 430073,
    "Java": 406712,
    "M4": 254614,
    "CMake": 211262,
    "Roff": 94421,
    "Perl": 82492,
    "Batchfile": 46730,
    "PLSQL": 45772,
    "Emacs Lisp": 38684,
    "Inno Setup": 37592,
    "JavaScript": 30990,
    "DIGITAL Command Language": 26468,
    "PowerShell": 24610,
    "Vim Script": 23584,
    "CSS": 21102,
    "Ruby": 14134,
    "GLSL": 2439,
    "Visual Basic": 962
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-backend\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-backend\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-backend\"], {}]": {
    "Python": 44962
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-ETL\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-ETL\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"Aander-ETL\"], {}]": {
    "Jupyter Notebook": 49992,
    "Python": 49875
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"ai-test-project\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"ai-test-project\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      14,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      14,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"ai-test-project\"], {}]": {
    "Python": 28
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"BirdClassification\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"BirdClassification\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"BirdClassification\"], {}]": {
    "Python": 86323,
    "Jupyter Notebook": 19458,
    "Shell": 4051,
    "Batchfile": 2307,
    "Makefile": 134
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"build-it\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"build-it\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      4,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      4,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"build-it\"], {}]": {
    "Python": 18038,
    "JavaScript": 2344,
    "HTML": 370
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"ChangeDetection\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"ChangeDetection\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"ChangeDetection\"], {}]": {
    "Python": 37265
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"co-opinion\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"co-opinion\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      11,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      8,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"co-opinion\"], {}]": {
    "TypeScript": 137818,
    "Svelte": 22643,
    "CSS": 1856,
    "JavaScript": 1208,
    "HTML": 329,
    "SCSS": 195
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"cv-builder\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"cv-builder\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      16,
      14,
      23
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      16,
      14,
      23
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"cv-builder\"], {}]": {
    "Python": 185998,
    "HTML": 42302,
    "TeX": 33904,
    "HCL": 1835,
    "Dockerfile": 1718,
    "CSS": 256
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"development-workforce\"], {}]": [
    "ai",
    "azuredevops",
    "llm",
    "python"
  ],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"development-workforce\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      13,
      2,
      0,
      6,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      13,
      2,
      0,
      6,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"development-workforce\"], {}]": {
    "Python": 54125
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-celery-model\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-celery-model\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-celery-model\"], {}]": {
    "Python": 16263,
    "Makefile": 352
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-generic-serializer\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-generic-serializer\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-generic-serializer\"], {}]": {
    "Python": 58121
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-json2model\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-json2model\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-json2model\"], {}]": {
    "Python": 61560
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-mutant\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-mutant\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"django-mutant\"], {}]": {
    "Python": 246638
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"GeoFileHandle\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"GeoFileHandle\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"GeoFileHandle\"], {}]": {
    "Python": 21397
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"gotta-process-em-all\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"gotta-process-em-all\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"gotta-process-em-all\"], {}]": {
    "Python": 6328
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"HuntingTrainerVR\"], {}]": [
    "hunting",
    "unity3d",
    "vr"
  ],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"HuntingTrainerVR\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      3,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      3,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"HuntingTrainerVR\"], {}]": {
    "ShaderLab": 81981,
    "C#": 35431,
    "HLSL": 13994,
    "Rich Text Format": 1035
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"meta-data-client\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"meta-data-client\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"meta-data-client\"], {}]": {
    "Jupyter Notebook": 62316,
    "Python": 6370
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"MetaDataApi\"], {}]": [
    "python3",
    "django",
    "oath2",
    "rest-api"
  ],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"MetaDataApi\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"MetaDataApi\"], {}]": {
    "CSS": 720903,
    "Python": 494746,
    "JavaScript": 265190,
    "HTML": 31372,
    "Jupyter Notebook": 30613,
    "PowerShell": 2208,
    "Shell": 1983,
    "Dockerfile": 366,
    "TSQL": 148
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"NaGeoS_lib\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"NaGeoS_lib\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"NaGeoS_lib\"], {}]": {
    "Python": 6497
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"open-collective\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"open-collective\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"open-collective\"], {}]": {
    "Python": 30364,
    "HTML": 5216,
    "CSS": 1704,
    "Dockerfile": 432
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"optimize-life\"], {}]": [
    "economy",
    "panel",
    "visualization"
  ],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"optimize-life\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"optimize-life\"], {}]": {
    "Python": 36321
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"personal-data-api\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"personal-data-api\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"personal-data-api\"], {}]": {
    "Python": 83146,
    "JavaScript": 10714,
    "HTML": 6234,
    "CSS": 682,
    "PowerShell": 60
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"PersonalDataApp\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"PersonalDataApp\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"PersonalDataApp\"], {}]": {
    "C#": 82118
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"rpi-window-controller\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"rpi-window-controller\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"rpi-window-controller\"], {}]": {
    "Python": 2961,
    "Shell": 83
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"Grusinator\", \"RPI_wildlife_tracker\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"Grusinator\", \"RPI_wildlife_tracker\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"Grusinator\", \"RPI_wildlife_tracker\"], {}]": {
    "Python": 28793
  },
  "_fetch_topics__[[\"GitHubProjectsRepository\", \"mhthNet\", \"EITC-route-planning\"], {}]": [],
  "_fetch_commit_activity__[[\"GitHubProjectsRepository\", \"mhthNet\", \"EITC-route-planning\"], {}]": {
    "all": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ],
    "owner": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  },
  "_fetch_languages__[[\"GitHubProjectsRepository\", \"mhthNet\", \"EITC-route-planning\"], {}]": {
    "JavaScript": 491314,
    "C#": 84290,
    "HTML": 20690,
    "CSS": 19942,
    "ASP": 111
  },
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        test\\n        --------------------\\n        Competencies:        \\n        []\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "[\"Python\", \"Data engineering\", \"Machine learning\"]",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        test\\n        --------------------\\n        Competencies:        \\n        [\\\"ai\\\", \\\"ASP\\\", \\\"Assembly\\\", \\\"azuredevops\\\", \\\"Batchfile\\\", \\\"C\\\", \\\"C#\\\", \\\"C++\\\", \\\"CMake\\\", \\\"CSS\\\", \\\"DIGITAL Command Language\\\", \\\"django\\\", \\\"Dockerfile\\\", \\\"economy\\\", \\\"Emacs Lisp\\\", \\\"GLSL\\\", \\\"HCL\\\", \\\"HLSL\\\", \\\"HTML\\\", \\\"hunting\\\", \\\"Inno Setup\\\", \\\"Java\\\", \\\"JavaScript\\\", \\\"Jupyter Notebook\\\", \\\"llm\\\", \\\"M4\\\", \\\"Makefile\\\", \\\"oath2\\\", \\\"Objective-C\\\", \\\"panel\\\", \\\"Perl\\\", \\\"PLSQL\\\", \\\"PowerShell\\\", \\\"Python\\\", \\\"python3\\\", \\\"rest-api\\\", \\\"Rich Text Format\\\", \\\"Roff\\\", \\\"Ruby\\\", \\\"SCSS\\\", \\\"ShaderLab\\\", \\\"Shell\\\", \\\"Svelte\\\", \\\"TeX\\\", \\\"TSQL\\\", \\\"TypeScript\\\", \\\"unity3d\\\", \\\"Vim Script\\\", \\\"Visual Basic\\\", \\\"visualization\\\", \\\"vr\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "[\"ai\", \"llm\", \"Python\", \"JavaScript\", \"TypeScript\", \"HTML\", \"CSS\", \"C#\", \"Java\", \"Dockerfile\", \"azuredevops\", \"unity3d\", \"vr\", \"visualization\", \"django\", \"ASP\", \"C++\", \"C\", \"Ruby\", \"Shell\", \"Perl\", \"PowerShell\", \"Objective-C\", \"Assembly\", \"Batchfile\", \"CMake\", \"DIGITAL Command Language\", \"economy\", \"Emacs Lisp\", \"GLSL\", \"HCL\", \"HLSL\", \"hunting\", \"Inno Setup\", \"Jupyter Notebook\", \"M4\", \"Makefile\", \"oath2\", \"panel\", \"PLSQL\", \"python3\", \"rest-api\", \"Rich Text Format\", \"Roff\", \"SCSS\", \"ShaderLab\", \"Svelte\", \"TeX\", \"TSQL\", \"Vim Script\", \"Visual Basic\"]",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Free put money option money production available break. Court buy note though mouth our thought.\\nQuickly ready week power involve which impact. High design cup seven.\\n        --------------------\\n        Competencies:        \\n        [\\\"Mr. Kristopher Mcneil\\\", \\\"Mrs. Kristina Craig\\\", \\\"Dr. Xavier Sawyer MD\\\", \\\"Sara Ray\\\", \\\"Shelly Huber DDS\\\", \\\"Mr. Kristopher Mcneil\\\", \\\"Mrs. Kristina Craig\\\", \\\"Dr. Xavier Sawyer MD\\\", \\\"Sara Ray\\\", \\\"Shelly Huber DDS\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n         Extract education from this pdf. it has to be stored in json format, with these fields:\\n         please save dates as yyyy-mm-dd, just assume first in month if day is not given.\\n         dict_keys(['education_id', 'degree', 'school', 'start_date', 'end_date', 'description', 'location'])\\n         Education can be found in the following text:\\n         ------------------\\n         Contact William Sandvej Hansen\\nNebbeg\\u00e5rdsbakken 52, 2400\\nK\\u00f8benhavn NV Data Engineer\\n40371757 (Mobile) Copenhagen, Capital Region of Denmark, Denmark\\ngrusinator@gmail.com\\nwww.linkedin.com/in/william- Summary\\nsandvej-hansen (LinkedIn)\\nI have been working on various projects ranging from backend\\nTop Skills development to data engineering to data analysis. Mostly within\\nengineering and energy sectors. I have a bit of GIS experience from\\nPanel\\nvarious projects, well supported by my education in data processing\\n.NET\\nwithin geospatial and remote sensing diciplines. Now adays its hard\\nDatabricks\\nto not get a bit of cloud and devops under the skin as well. I am\\nLanguages quite adaptive in terms of skills and competences, and not afraid to\\nstart out something that i might not know much about. In terms of\\nDansk (Native or Bilingual)\\npersonality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping\\nTysk (Limited Working)\\nInspirer\\\". creative, energetic and currious type. Sometimes a bit too\\nEnglish (Professional Working)\\nquick and intuitive. But it has its qualities too.\\nExperience\\nEnerginet\\nData Engineer\\nDecember 2022 - October 2023 (11 months)\\nAs a data engineer at Energinet, i was responsible for developing a data\\nproject collecting massive amounts of data from the energy island in denmark,\\nfrom various providers. The main goal was to recieve, perform quality control,\\nand deliver data to the developers wanting to bid on the project. In order to\\nquality control and unpack these wide range of binary offshore sensor data\\nfiles, we relied on spark and databricks to be able to scale, while at the same\\ntime allow for the flexibility of the various data formats. Just to name a few,\\nGDB, DFSU, segy, xtf etc. Some of these datasets had to be unpacked for QC,\\nanalytics and visualization purposes, so in order to support geospatial data in\\nspark i used sedona (geospark) to be able to store data in delta parquet format\\nand to perform spatial partitioning on the dataset using geohashing, in order to\\nimprove read performance.\\n\\u00d8rsted\\nData Engineer\\nMarch 2020 - November 2022 (2 years 9 months)\\nCopenhagen Area, Capital Region, Denmark\\nPage 1 of 3As a data engineer I have been developing a data validation component\\nas a part of our data pipelines, with configurable inputs for what to validate,\\ndeveloped in python, relying on pandas as data abstraction, integrated using\\nAzure Service Bus.\\nI have also been involved with the data modelling in order to provide easy to\\nunderstand and consume data for various analytics tools. MS Sql Server, Rest\\napi.\\nIn order to do iterate faster when implementing the right data model, we\\nused python, sqlalchemy and Sqlite, to implement a mock db, mimicking\\nthe production environment, and to test the changes before implementing it,\\navoiding changes in api and data pipeline.\\nI have also developed different data analytics and visualization tools in\\npython using streamlit, Panel, Dash and bokeh, that helps engineers to make\\ninterpretations based on the data.\\nAt \\u00d8rsted i have been using the SAFE framework for project management,\\nDevops has been relying on Azure devops, Docker and K8S.\\nNetcompany\\nIT Consultant\\nNovember 2018 - November 2019 (1 year 1 month)\\nK\\u00f8benhavnsomr\\u00e5det, Danmark\\nAt Netcompany i have been working at big projects building custom IT\\nsolutions with multiple integrations. The primary tools that i have been using as\\na backend developer was Oracle, Groovy, REST and a bit of Javascript. For\\nproject management and version control Jira and Git with SCRUM.\\nNIRAS\\nSoftwareudvikler\\nSeptember 2016 - March 2018 (1 year 7 months)\\nAller\\u00f8d, Capital Region, Denmark\\nAt Niras i have been developing geodata algorithms for data transformation,\\nincluding processing of lidar data, and images. I have among other developed\\nan image classifier that can identify buildings in spectral orthophotos.\\nI have also developed a model that can based on lidar and gis road data,\\nidentify the height profile of the roadsides, and identify the need and cost for\\ncleaning the roadside. This was developed in C# using Postgres, postgis, with\\nparallel processing capabilities.\\nPage 2 of 3At Niras i have also been developing various plugins for QGIS, using Qt and\\nPython.\\nKK Wind Solutions\\nEngineer\\nMarch 2014 - August 2014 (6 months)\\nIkast\\nAt KK wind solutions I was hired for a project of a half year where I was\\ninvestigating the effort of switching out a communication chip for the IO boards\\nin the wind turbine control system. This was due to inducing flexibility in\\nthe product configuration. This project involved programming the chip in C,\\ninvestigating communication protocols as Ethercat profinet etc.\\nDet Tekniske Fakultet, Syddansk Universitet\\nInstructor\\nSeptember 2013 - January 2014 (5 months)\\nOdense Area, Denmark\\ninstructor in Electronics courses teaching basic analog circuit design.\\nVELUX\\nInternship Electronics\\nFebruary 2013 - June 2013 (5 months)\\nSkjern - Denmark\\nDuring my time at Velux I developed a PCB for loading a solar panels. This\\nPCB was meant for testing the durability of solar panels for the automated\\nVelux windows.\\nEducation\\nDanmarks Tekniske Universitet\\nMaster of Engineering - MEng, Earth and Space Physics and\\nEngineering \\u00b7 (2014 - 2016)\\nSyddansk Universitet\\nBachelor of Engineering (BEng), Electrical and Electronics\\nEngineering \\u00b7 (2010 - 2014)\\nVejle Tekniske Gymnasium\\nHTX, Science - Mathematics and Physics \\u00b7 (2007 - 2010)\\nPage 3 of 3\\n         \"], {}]": "Here's the extracted education information in JSON format as requested:\n\n```json\n[\n    {\n        \"education_id\": 1,\n        \"degree\": \"Master of Engineering - MEng\",\n        \"school\": \"Danmarks Tekniske Universitet\",\n        \"start_date\": \"2014-09-01\",\n        \"end_date\": \"2016-06-01\",\n        \"description\": \"Earth and Space Physics and Engineering\",\n        \"location\": \"Denmark\"\n    },\n    {\n        \"education_id\": 2,\n        \"degree\": \"Bachelor of Engineering (BEng)\",\n        \"school\": \"Syddansk Universitet\",\n        \"start_date\": \"2010-09-01\",\n        \"end_date\": \"2014-06-01\",\n        \"description\": \"Electrical and Electronics Engineering\",\n        \"location\": \"Denmark\"\n    },\n    {\n        \"education_id\": 3,\n        \"degree\": \"HTX\",\n        \"school\": \"Vejle Tekniske Gymnasium\",\n        \"start_date\": \"2007-09-01\",\n        \"end_date\": \"2010-06-01\",\n        \"description\": \"Science - Mathematics and Physics\",\n        \"location\": \"Denmark\"\n    }\n]\n```\n\nThis JSON format provides each segment of education William Sandvej Hansen acquired, clearly stated with degree types, study timelines, academic institutions, brief description of the focus area, and geographical reference of the schooling.",
  "ask_question__[[\"LlmConnector\", \"\\n        Extract job positions from this pdf. it has to be stored in json format, with these fields, \\n        please save dates as yyyy-mm-dd, just assume first in month if day is not given.\\n        dict_keys(['job_position_id', 'title', 'company', 'start_date', 'end_date', 'location', 'description', 'competencies'])\\n        Job positions can be found in the following text:\\n        ------------------\\n        Contact William Sandvej Hansen\\nNebbeg\\u00e5rdsbakken 52, 2400\\nK\\u00f8benhavn NV Data Engineer\\n40371757 (Mobile) Copenhagen, Capital Region of Denmark, Denmark\\ngrusinator@gmail.com\\nwww.linkedin.com/in/william- Summary\\nsandvej-hansen (LinkedIn)\\nI have been working on various projects ranging from backend\\nTop Skills development to data engineering to data analysis. Mostly within\\nengineering and energy sectors. I have a bit of GIS experience from\\nPanel\\nvarious projects, well supported by my education in data processing\\n.NET\\nwithin geospatial and remote sensing diciplines. Now adays its hard\\nDatabricks\\nto not get a bit of cloud and devops under the skin as well. I am\\nLanguages quite adaptive in terms of skills and competences, and not afraid to\\nstart out something that i might not know much about. In terms of\\nDansk (Native or Bilingual)\\npersonality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping\\nTysk (Limited Working)\\nInspirer\\\". creative, energetic and currious type. Sometimes a bit too\\nEnglish (Professional Working)\\nquick and intuitive. But it has its qualities too.\\nExperience\\nEnerginet\\nData Engineer\\nDecember 2022 - October 2023 (11 months)\\nAs a data engineer at Energinet, i was responsible for developing a data\\nproject collecting massive amounts of data from the energy island in denmark,\\nfrom various providers. The main goal was to recieve, perform quality control,\\nand deliver data to the developers wanting to bid on the project. In order to\\nquality control and unpack these wide range of binary offshore sensor data\\nfiles, we relied on spark and databricks to be able to scale, while at the same\\ntime allow for the flexibility of the various data formats. Just to name a few,\\nGDB, DFSU, segy, xtf etc. Some of these datasets had to be unpacked for QC,\\nanalytics and visualization purposes, so in order to support geospatial data in\\nspark i used sedona (geospark) to be able to store data in delta parquet format\\nand to perform spatial partitioning on the dataset using geohashing, in order to\\nimprove read performance.\\n\\u00d8rsted\\nData Engineer\\nMarch 2020 - November 2022 (2 years 9 months)\\nCopenhagen Area, Capital Region, Denmark\\nPage 1 of 3As a data engineer I have been developing a data validation component\\nas a part of our data pipelines, with configurable inputs for what to validate,\\ndeveloped in python, relying on pandas as data abstraction, integrated using\\nAzure Service Bus.\\nI have also been involved with the data modelling in order to provide easy to\\nunderstand and consume data for various analytics tools. MS Sql Server, Rest\\napi.\\nIn order to do iterate faster when implementing the right data model, we\\nused python, sqlalchemy and Sqlite, to implement a mock db, mimicking\\nthe production environment, and to test the changes before implementing it,\\navoiding changes in api and data pipeline.\\nI have also developed different data analytics and visualization tools in\\npython using streamlit, Panel, Dash and bokeh, that helps engineers to make\\ninterpretations based on the data.\\nAt \\u00d8rsted i have been using the SAFE framework for project management,\\nDevops has been relying on Azure devops, Docker and K8S.\\nNetcompany\\nIT Consultant\\nNovember 2018 - November 2019 (1 year 1 month)\\nK\\u00f8benhavnsomr\\u00e5det, Danmark\\nAt Netcompany i have been working at big projects building custom IT\\nsolutions with multiple integrations. The primary tools that i have been using as\\na backend developer was Oracle, Groovy, REST and a bit of Javascript. For\\nproject management and version control Jira and Git with SCRUM.\\nNIRAS\\nSoftwareudvikler\\nSeptember 2016 - March 2018 (1 year 7 months)\\nAller\\u00f8d, Capital Region, Denmark\\nAt Niras i have been developing geodata algorithms for data transformation,\\nincluding processing of lidar data, and images. I have among other developed\\nan image classifier that can identify buildings in spectral orthophotos.\\nI have also developed a model that can based on lidar and gis road data,\\nidentify the height profile of the roadsides, and identify the need and cost for\\ncleaning the roadside. This was developed in C# using Postgres, postgis, with\\nparallel processing capabilities.\\nPage 2 of 3At Niras i have also been developing various plugins for QGIS, using Qt and\\nPython.\\nKK Wind Solutions\\nEngineer\\nMarch 2014 - August 2014 (6 months)\\nIkast\\nAt KK wind solutions I was hired for a project of a half year where I was\\ninvestigating the effort of switching out a communication chip for the IO boards\\nin the wind turbine control system. This was due to inducing flexibility in\\nthe product configuration. This project involved programming the chip in C,\\ninvestigating communication protocols as Ethercat profinet etc.\\nDet Tekniske Fakultet, Syddansk Universitet\\nInstructor\\nSeptember 2013 - January 2014 (5 months)\\nOdense Area, Denmark\\ninstructor in Electronics courses teaching basic analog circuit design.\\nVELUX\\nInternship Electronics\\nFebruary 2013 - June 2013 (5 months)\\nSkjern - Denmark\\nDuring my time at Velux I developed a PCB for loading a solar panels. This\\nPCB was meant for testing the durability of solar panels for the automated\\nVelux windows.\\nEducation\\nDanmarks Tekniske Universitet\\nMaster of Engineering - MEng, Earth and Space Physics and\\nEngineering \\u00b7 (2014 - 2016)\\nSyddansk Universitet\\nBachelor of Engineering (BEng), Electrical and Electronics\\nEngineering \\u00b7 (2010 - 2014)\\nVejle Tekniske Gymnasium\\nHTX, Science - Mathematics and Physics \\u00b7 (2007 - 2010)\\nPage 3 of 3\\n        \"], {}]": "```json\n[\n    {\n        \"job_position_id\": 1,\n        \"title\": \"Data Engineer\",\n        \"company\": \"Energinet\",\n        \"start_date\": \"2022-12-01\",\n        \"end_date\": \"2023-10-01\",\n        \"location\": \"Denmark\",\n        \"description\": \"As a data engineer at Energinet, I was responsible for developing a data project collecting massive amounts of data from the energy island in Denmark, from various providers. The main goal was to receive, perform quality control, and deliver data to the developers wanting to bid on the project. Relied on Spark and Databricks for scaling and flexibility with various data formats like GDB, DFSU, segy, xtf, etc. Used Sedona (GeoSpark) for spatial data support in Spark, storing data in Delta Parquet format, and performing spatial partitioning using geohashing for improved read performance.\",\n        \"competencies\": [\n            \"Spark\",\n            \"Databricks\",\n            \"Data Quality Control\",\n            \"Geospatial Data Handling\",\n            \"Data Partitioning\",\n            \"Delta Parquet\"\n        ]\n    },\n    {\n        \"job_position_id\": 2,\n        \"title\": \"Data Engineer\",\n        \"company\": \"\u00d8rsted\",\n        \"start_date\": \"2020-03-01\",\n        \"end_date\": \"2022-11-01\",\n        \"location\": \"Copenhagen Area, Capital Region, Denmark\",\n        \"description\": \"Developed a data validation component within data pipelines, integrated using Azure Service Bus, and reliant on Python and Pandas. Involved with data modeling with MS SQL Server and REST API using Python, SQLAlchemy, and SQLite for mock DBs mirroring production to test changes. Developed data analytics and visualization tools using Streamlit, Panel, Dash, and Bokeh. Utilized the SAFE framework for project management and relied on Azure DevOps, Docker, and K8S for DevOps.\",\n        \"competencies\": [\n            \"Data Validation\",\n            \"Python\",\n            \"Pandas\",\n            \"Data Modelling\",\n            \"SQL Server\",\n            \"Azure DevOps\",\n            \"Docker\",\n            \"Kubernetes\",\n            \"SAFE Framework\",\n            \"Data Visualization\"\n        ]\n    },\n    {\n        \"job_position_id\": 3,\n        \"title\": \"IT Consultant\",\n        \"company\": \"Netcompany\",\n        \"start_date\": \"2018-11-01\",\n        \"end_date\": \"2019-11-01\",\n        \"location\": \"K\u00f8benhavn, Denmark\",\n        \"description\": \"Worked on large-scale custom IT solutions with multiple integrations using Oracle, Groovy, Java REST APIs, and a bit of JavaScript. Employed Jira and Git with SCRUM methodology for project management and version control.\",\n        \"competencies\": [\n            \"Oracle\",\n            \"Groovy\",\n            \"REST APIs\",\n            \"JavaScript\",\n            \"Jira\",\n            \"Git\",\n            \"SCRUM\"\n        ]\n    },\n    {\n        \"job_position_id\": 4,\n        \"title\": \"Softwareudvikler\",\n        \"company\": \"NIRAS\",\n        \"start_date\": \"2016-09-01\",\n        \"end_date\": \"2018-03-01\",\n        \"location\": \"Aller\u00f8d, Capital Region, Denmark\",\n        \"description\": \"Developed geodata algorithms for data transformation, including processing of LiDAR data and images. Created an image classifier for identifying buildings in spectral orthophotos and a model to analyze roadside height profiles using LiDAR and GIS data. Developed various plugins for QGIS using Qt and Python.\",\n        \"competencies\": [\n            \"Geodata Algorithms\",\n            \"LiDAR Data Processing\",\n            \"Image Classifier\",\n            \"GIS\",\n            \"QGIS Plugins\",\n            \"Qt\",\n            \"Python\",\n            \"C#\",\n            \"PostgreSQL\",\n            \"PostGIS\"\n        ]\n    },\n    {\n        \"job_position_id\": 5,\n        \"title\": \"Engineer\",\n        \"company\": \"KK Wind Solutions\",\n        \"start_date\": \"2014-03-01\",\n        \"end_date\": \"2014-08-01\",\n        \"location\": \"Ikast\",\n        \"description\": \"Investigated the replacement of communication chips for IO boards in wind turbine control systems for product configuration flexibility. This involved programming in C and studying communication protocols like EtherCAT and Profinet.\",\n        \"competencies\": [\n            \"C Programming\",\n            \"Communication Protocols\",\n            \"EtherCAT\",\n            \"Profinet\",\n            \"Hardware Integration\"\n        ]\n    },\n    {\n        \"job_position_id\": 6,\n        \"title\": \"Instructor\",\n        \"company\": \"Det Tekniske Fakultet, Syddansk Universitet\",\n        \"start_date\": \"2013-09-01\",\n        \"end_date\": \"2014-01-01\",\n        \"location\": \"Odense Area, Denmark\",\n        \"description\": \"Instructor in Electronics courses teaching basic analog circuit design.\",\n        \"competencies\": [\n            \"Electronics Teaching\",\n            \"Analog Circuit Design\",\n            \"Educational Skills\"\n        ]\n    },\n    {\n        \"job_position_id\": 7,\n        \"title\": \"Internship Electronics\",\n        \"company\": \"VELUX\",\n        \"start_date\": \"2013-02-01\",\n        \"end_date\": \"2013-06-01\",\n        \"location\": \"Skjern, Denmark\",\n        \"description\": \"Developed a PCB for testing the durability of solar panels for automated Velux windows.\",\n        \"competencies\": [\n            \"PCB Design\",\n            \"Solar Panel Testing\",\n            \"Durability Analysis\"\n        ]\n    }\n]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n          Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n          Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n          if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n          Feel free to mention the company name and job title. \\n          Here is the job post description. \\n           Data Steward at Pharmaceutical Manufacturing \\n          ------------------\\n          consider the following job positions:\\n          <QuerySet [<ProjectModel: Aander-backend>, <ProjectModel: Aander-ETL>, <ProjectModel: ai-test-project>, <ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-celery-model>, <ProjectModel: django-generic-serializer>, <ProjectModel: django-json2model>, <ProjectModel: django-mutant>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following education:\\n          <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following projects:\\n          <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n          ------------------\\n          make it short. its for a cv intro section. max 4 sentences.\\n          \"], {}]": "As a candidate with a robust background in Earth and Space Physics and Engineering paired with experience in technology-driven projects like Aander-ETL and MetaDataApi, I am poised to contribute effectively as a Data Steward at your esteemed Pharmaceutical Manufacturing company. My technical proficiency in diverse programming languages and platforms, especially from project experiences like django-celery-model and NaGeoS_lib, aligns well with the data-intensive demands of this role. Furthermore, my ability to master and integrate various data systems is supported by my educational pursuits in both Earth and Space Physics as well as Electrical Engineering. These competencies equip me to not only manage and protect crucial data but also ensure its integrity and accessibility in line with your company\u2019s strategic objectives.",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        ---------------------------------------------------------\\r\\n\\r\\nJob Title: Data Steward\\r\\nContract Length: 12 months with good chance of extension\\r\\nB2B Contract\\r\\nRate: 870 DKK/hour\\r\\nIndustry: Pharmaceutical Manufacturing\\r\\nLocation: Copenhagen (on-site)\\r\\n\\r\\nJob Description:\\r\\n\\r\\nKey Responsibilities:\\r\\nWork on ontology delivery.\\r\\nSupport CDM (Cross-Domain Modeling) system.\\r\\nCommunicate with cross-matrix teams and stakeholders.\\r\\nGather requirements and understand data perspectives.\\r\\nSkills Required:\\r\\nComfortable in agile frameworks.\\r\\nExperience with AWS, Azure.\\r\\nFamiliarity with biomedical vocabularies (e.g., MeSH, SNOMED, UBERON).\\r\\nData processing skills in Python (nice to have).\\r\\nStrong communication skills.\\n        --------------------\\n        Competencies:        \\n        [\\\"AI\\\", \\\"ASP\\\", \\\"azuredevops\\\", \\\"Azure Service Bus\\\", \\\"Batchfile\\\", \\\"C\\\", \\\"C#\\\", \\\"CSS\\\", \\\"django\\\", \\\"Dockerfile\\\", \\\"economy\\\", \\\"EtherCat\\\", \\\"HLSL\\\", \\\"HTML\\\", \\\"hunting\\\", \\\"JavaScript\\\", \\\"Jupyter Notebook\\\", \\\"llm\\\", \\\"Makefile\\\", \\\"MS SQL Server\\\", \\\"oath2\\\", \\\"Pandas\\\", \\\"panel\\\", \\\"PCB Design\\\", \\\"PostGIS\\\", \\\"Postgres\\\", \\\"PowerShell\\\", \\\"Profinet\\\", \\\"Python\\\", \\\"QGIS\\\", \\\"Qt\\\", \\\"REST API\\\", \\\"Rich Text Format\\\", \\\"SCSS\\\", \\\"ShaderLab\\\", \\\"Shell\\\", \\\"SQLAlchemy\\\", \\\"Svelte\\\", \\\"TeX\\\", \\\"TSQL\\\", \\\"TypeScript\\\", \\\"unity3d\\\", \\\"visualization\\\", \\\"vr\\\", \\\"Game Development\\\", \\\"UX\\\", \\\"SCRUM\\\", \\\"CAD\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[\n    \"Azure Service Bus\",\n    \"Python\",\n    \"azuredevops\",\n    \"SCRUM\",\n    \"Pandas\",\n    \"REST API\",\n    \"MS SQL Server\",\n    \"Postgres\",\n    \"JavaScript\",\n    \"HTML\",\n    \"CSS\",\n    \"C#\",\n    \"TypeScript\",\n    \"Dockerfile\",\n    \"Jupyter Notebook\",\n    \"Shell\",\n    \"PowerShell\",\n    \"SQLAlchemy\",\n    \"PostGIS\",\n    \"django\"\n]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n          Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n          Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n          if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n          Feel free to mention the company name and job title. \\n          Here is the job post description. \\n           Full Stack Developer at Factbird \\n          ------------------\\n          consider the following job positions:\\n          <QuerySet [<ProjectModel: Aander-backend>, <ProjectModel: Aander-ETL>, <ProjectModel: ai-test-project>, <ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-celery-model>, <ProjectModel: django-generic-serializer>, <ProjectModel: django-json2model>, <ProjectModel: django-mutant>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following education:\\n          <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following projects:\\n          <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n          ------------------\\n          make it short. its for a cv intro section. max 4 sentences.\\n          \"], {}]": "As an experienced Full Stack Developer, my diverse background in projects ranging from AI and data processing with \u2018Aander-backend\u2019 and \u2018ai-test-project\u2019 to extensive full-stack development at \u2018django-celery-model\u2019 and \u2018django-json2model\u2019 positions me as a suitable candidate for Factbird. My solid foundation in programming, outlined by my transition from a Bachelor of Electrical Engineering at Syddansk Universitet to completing my Master\u2019s in Earth and Space Physics and Engineering at Danmarks Tekniske Universitet, provides a rigorous problem-solving framework and technical proficiencies applicable in this role. My expertise in languages such as JavaScript, C#, CSS, and frameworks like Django aligns well with the needs of your development projects. With an enthusiasm for continuous learning and improvement, I am eager to contribute effectively to your team at Factbord and push the boundaries of innovative software solutions.",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Join the Factbird Team and Take Flight into a World of Data Revolution! \\ud83d\\ude80\\r\\n\\r\\nAt Factbird, we're on a mission to transform data collection and production monitoring, empowering organizations worldwide with the transformative power of data.\\r\\n\\r\\nAs a Full Stack Engineer in our Cloud Development Team, you'll be an integral part of our team, working with cutting-edge technologies like TypeScript, React, Node.js, and Rust\\r\\n\\r\\nOur passion lies in eliminating friction in production processes for companies across the globe. Together, we're building a powerful plug-and-play solution that reshapes resource allocation and decision-making processes everywhere.\\r\\n\\r\\n \\r\\n\\r\\nA day in the life of a Full-stack Software Engineer\\r\\n\\r\\nA day in your life as Full-stack Engineer with us will be anything but ordinary: Your typical work week would include:\\r\\n\\r\\nYou will write, review, and maintain code in languages such as TypeScript and Rust.\\r\\nYou will collaborate closely with customers and colleagues to understand the problems we want to solve and explore how to solve them.\\r\\nYou will open Pull Requests to implement new features to expand the Factbird platform.\\r\\nYou will design solutions with your team to tackle engineering issues related to scalability, unique IoT challenges, and UX improvements.\\r\\nYou will work with a mentor to ensure that you thrive and develop professionally and personally.\\r\\n \\r\\n\\r\\nAnd here's the best part \\u2013 at Factbird, merit matters more than seniority. \\r\\n\\r\\nYour opinions will be valued, and your contributions will be celebrated. We believe in fostering an inclusive, flexible, and growth-oriented environment right here in vibrant Copenhagen. We are guided in our work, decisions, and unique culture by our values.  We develop talent.  We create trust, we thrive together.\\r\\n\\r\\nTo thrive with us, we're looking for developers who genuinely care about shipping top-notch software. Even if you don't tick all the boxes, we'd love to hear from you! \\r\\n\\r\\n \\r\\n\\r\\nHere's what we'd love to see in you:\\r\\n\\r\\nThe perfect applicant for us has experience with some, or all, parts of the tech stack, a good problem-solving mindset, and a desire for creating user-friendly products that have an impact in the real world.\\r\\n\\r\\nThere are only a handful of people who meet all qualifications. We care most about developers that have a track record of caring genuinely about shipping software. Either way, we want to hear from you!\\r\\n\\r\\nA degree in Computer Science or similar or equivalent work experience.\\r\\nExperience with JavaScript and frontend client libraries (e.g., React)\\r\\nExperience with TypeScript and Rust.\\r\\nSQL/NoSQL or general database knowledge.\\r\\nExperience with REST or GraphQL API design.\\r\\nA strong sense of product and an understanding of the human who is using it.\\r\\nStrong communication skills, both written and verbal.\\r\\nAn appreciation for infrastructure and automation\\r\\n \\r\\n\\r\\nIf the above doesn\\u2019t fit you, then maybe some of the following does:\\r\\n\\r\\nFamiliarity with any of the following: serverless, microservices, Docker, GraphQL, CI/CD, SQL, and NoSQL, Git.\\r\\nExperience with AWS.\\r\\nExperience with React.\\r\\nExperience building, operating, and maintaining scalable services.\\r\\nExperience with open-source contributions.\\r\\n \\r\\n\\r\\nA little about us \\r\\n\\r\\nFactbird is a game-changing end-to-end manufacturing intelligence solution that simplifies data gathering and analysis for all manufacturers. With this solution at your fingertips, you can finally take charge of your manufacturing efficiency and redefine the boundaries of success. Factbird, in business since 2015, is now used in over 25 countries worldwide and trusted by 200+ manufacturers daily, with offices in Denmark and the US. After a recent funding round, we are currently scaling significantly across the globe. \\r\\n\\r\\nOur story is a narrative of ceaseless innovation, collaborative growth, and a resolute commitment to our customers. We've continually evolved, developing our product with our clients' feedback, establishing features and solutions that not only restructure industry operations but cement our position as a trailblazer in manufacturing technology. \\r\\n\\r\\n \\r\\n\\r\\nWe're scaling significantly across the globe after a recent funding round, and we want you to be a part of our exciting journey! \\ud83c\\udf1f Join the Factbird Team, and you'll enjoy\\r\\n\\r\\nFlexible working hours with hybrid work options.\\r\\nSkills development and growth opportunities.\\r\\nA competitive salary to recognize your valuable contributions.\\r\\nA warm and structured onboarding\\r\\nYou choose your gear to work with what inspires you.\\r\\nAn international, diverse, and inclusive culture with colleagues from 17 different nationalities!\\r\\n \\r\\n\\r\\nReady to embark on an incredible journey and shape the future of data collection and production monitoring? \\r\\n\\r\\nDon't miss this exciting opportunity \\u2013 join us now by submitting your application! Plus, feel free to share this awesome chance with anyone who'd be a perfect fit! \\ud83c\\udf20\\r\\n\\r\\nOur interview process is a breeze \\u2013 it starts with a chat with our recruiter, followed by one technical interview, and culminates with a talk with our leadership team. Got any questions or need more details? Reach out to Khristel Marie Aparicio at khma@factbird.com\\n        --------------------\\n        Competencies:        \\n        [\\\"AI\\\", \\\"ASP\\\", \\\"azuredevops\\\", \\\"Azure Service Bus\\\", \\\"Batchfile\\\", \\\"C\\\", \\\"C#\\\", \\\"CSS\\\", \\\"django\\\", \\\"Dockerfile\\\", \\\"economy\\\", \\\"EtherCat\\\", \\\"HLSL\\\", \\\"HTML\\\", \\\"hunting\\\", \\\"JavaScript\\\", \\\"Jupyter Notebook\\\", \\\"llm\\\", \\\"Makefile\\\", \\\"MS SQL Server\\\", \\\"oath2\\\", \\\"Pandas\\\", \\\"panel\\\", \\\"PCB Design\\\", \\\"PostGIS\\\", \\\"Postgres\\\", \\\"PowerShell\\\", \\\"Profinet\\\", \\\"Python\\\", \\\"QGIS\\\", \\\"Qt\\\", \\\"REST API\\\", \\\"Rich Text Format\\\", \\\"SCSS\\\", \\\"ShaderLab\\\", \\\"Shell\\\", \\\"SQLAlchemy\\\", \\\"Svelte\\\", \\\"TeX\\\", \\\"TSQL\\\", \\\"TypeScript\\\", \\\"unity3d\\\", \\\"visualization\\\", \\\"vr\\\", \\\"Game Development\\\", \\\"UX\\\", \\\"SCRUM\\\", \\\"CAD\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[\n    \"TypeScript\",\n    \"JavaScript\",\n    \"REST API\",\n    \"React\",\n    \"Rust\",\n    \"SQL\",\n    \"NoSQL\",\n    \"GraphQL\",\n    \"Dockerfile\",\n    \"AWS\",\n    \"UX\",\n    \"CSS\",\n    \"HTML\",\n    \"SCRUM\"\n]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Everyone might participant themselves kind economic. Product situation employee be quality society know. Series read attack just matter pressure another.\\n        --------------------\\n        Competencies:        \\n        [\\\"Mr. Franklin Morgan\\\", \\\"Yvette Frost\\\", \\\"Mrs. Karen Salazar\\\", \\\"Dr. Suzanne Newton\\\", \\\"Jesus Gay\\\", \\\"Mr. Franklin Morgan\\\", \\\"Yvette Frost\\\", \\\"Mrs. Karen Salazar\\\", \\\"Dr. Suzanne Newton\\\", \\\"Jesus Gay\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Happy east ground various. Break very left total act allow focus. Drug often situation should it base such.\\n        --------------------\\n        Competencies:        \\n        [\\\"Dr. Colin Cox\\\", \\\"Wanda Mills\\\", \\\"Mrs. Diamond Michael DVM\\\", \\\"Dr. Charles Foster\\\", \\\"Dr. Stephanie Snyder PhD\\\", \\\"Dr. Colin Cox\\\", \\\"Wanda Mills\\\", \\\"Mrs. Diamond Michael DVM\\\", \\\"Dr. Charles Foster\\\", \\\"Dr. Stephanie Snyder PhD\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Property ago poor thousand heart. Notice down school reveal surface game without play. Million staff book economic Democrat start.\\n        --------------------\\n        Competencies:        \\n        [\\\"Dr. Casey Grant\\\", \\\"Leroy Glenn\\\", \\\"Mr. Willie Khan\\\", \\\"Dr. Alejandra Williamson\\\", \\\"Miss Adriana Beard\\\", \\\"Dr. Casey Grant\\\", \\\"Leroy Glenn\\\", \\\"Mr. Willie Khan\\\", \\\"Dr. Alejandra Williamson\\\", \\\"Miss Adriana Beard\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Themselves money upon region. Lot president section.\\nRed would performance there some. However recently tough necessary finally I. Address role he. Contain success increase war never team result.\\n        --------------------\\n        Competencies:        \\n        [\\\"Jacob Travis\\\", \\\"Mr. Larry Barrett MD\\\", \\\"Mandy Travis\\\", \\\"Mrs. Paula Bright\\\", \\\"Ms. Debra Brandt\\\", \\\"Jacob Travis\\\", \\\"Mr. Larry Barrett MD\\\", \\\"Mandy Travis\\\", \\\"Mrs. Paula Bright\\\", \\\"Ms. Debra Brandt\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Performance moment condition live without accept. Author threat deal party way break. Huge close maybe soon him act.\\nWho size room. Media outside he voice.\\n        --------------------\\n        Competencies:        \\n        [\\\"Dr. Marisa Young\\\", \\\"Ms. Caitlin Proctor DVM\\\", \\\"Mr. Fred Heath V\\\", \\\"Billy Horne Jr.\\\", \\\"Ann Little DDS\\\", \\\"Dr. Marisa Young\\\", \\\"Ms. Caitlin Proctor DVM\\\", \\\"Mr. Fred Heath V\\\", \\\"Billy Horne Jr.\\\", \\\"Ann Little DDS\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Total subject word large smile most try. Air situation good law never.\\nMeet lot tend memory. Right community man back news of help. Employee left world.\\n        --------------------\\n        Competencies:        \\n        [\\\"Dr. Evan Sosa Jr.\\\", \\\"Miss Carol Buck\\\", \\\"Mr. Ronald Mcmahon IV\\\", \\\"Martin Manning DDS\\\", \\\"Mr. Jerry Matthews IV\\\", \\\"Dr. Evan Sosa Jr.\\\", \\\"Miss Carol Buck\\\", \\\"Mr. Ronald Mcmahon IV\\\", \\\"Martin Manning DDS\\\", \\\"Mr. Jerry Matthews IV\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n          Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n          Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n          if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n          Feel free to mention the company name and job title. \\n          Here is the job post description. \\n           Electrical Engineer at Lego (Epico) \\n          ------------------\\n          consider the following job positions:\\n          <QuerySet [<ProjectModel: Aander-backend>, <ProjectModel: Aander-ETL>, <ProjectModel: ai-test-project>, <ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-celery-model>, <ProjectModel: django-generic-serializer>, <ProjectModel: django-json2model>, <ProjectModel: django-mutant>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following education:\\n          <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following projects:\\n          <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n          ------------------\\n          make it short. its for a cv intro section. max 4 sentences.\\n          \"], {}]": "Leveraging a Bachelor's degree in Electrical Engineering from Syddansk Universitet and a Master's in Earth and Space Physics and Engineering from Danmarks Tekniske Universitet, I possess a robust foundation in technical disciplines pertinent to the Electrical Engineer role at Lego (Epico). My professional journey includes diverse projects like Aander-backend and HuntingTrainerVR, where I refined skills that align with developing innovative solutions for automated and digital systems. My proficiency with tools and languages such as Django, C#, and Azure, complemented by practical knowledge in AI and system automation, aligns well with the technological aspirations at Lego (Epico). I am enthusiastic about contributing to impactful projects and collaborating with your team to advance Lego\u2019s mission of inspiring and developing the builders of tomorrow.",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        EPICO-IT is searching for an Electrical Engineer\\r\\n\\r\\nOur client is looking for different seniorities, ranging from engineers with a few years of experience to experts with +15 years of experience.\\r\\n \\r\\nAny implementation would likely happen in Q3-Q4 or as agreed. \\r\\n\\r\\n- Serve as a contributor in development lifecycle management in embedded microelectronics and power management solutions used in mechatronic systems.\\r\\n- Be key individual contributor role in work involving microelectronics and power solutions design, trouble shooting, risk management, safety/compliance, and testing.\\r\\n- Work as part of a global cross functional team (North America, Europe, Asia) to deliver and lifecycle manage integrated, manufacturable solutions at excellent quality.\\r\\n- Ensure electronics and PCBA solutions are aligned with our architectural blueprint, and meet all safety/regulatory/quality requirements.\\r\\n- Demonstrate excellence in engineering, teamwork, innovation, risk management/mitigation, and delivery.\\r\\n\\r\\nOnsite in Billund 3 days weekly\\r\\nLanguage: English\\n        --------------------\\n        Competencies:        \\n        [\\\"AI\\\", \\\"ASP\\\", \\\"azuredevops\\\", \\\"Azure Service Bus\\\", \\\"Batchfile\\\", \\\"C\\\", \\\"C#\\\", \\\"CSS\\\", \\\"django\\\", \\\"Dockerfile\\\", \\\"economy\\\", \\\"EtherCat\\\", \\\"HLSL\\\", \\\"HTML\\\", \\\"hunting\\\", \\\"JavaScript\\\", \\\"Jupyter Notebook\\\", \\\"llm\\\", \\\"Makefile\\\", \\\"MS SQL Server\\\", \\\"oath2\\\", \\\"Pandas\\\", \\\"panel\\\", \\\"PCB Design\\\", \\\"PostGIS\\\", \\\"Postgres\\\", \\\"PowerShell\\\", \\\"Profinet\\\", \\\"Python\\\", \\\"QGIS\\\", \\\"Qt\\\", \\\"REST API\\\", \\\"Rich Text Format\\\", \\\"SCSS\\\", \\\"ShaderLab\\\", \\\"Shell\\\", \\\"SQLAlchemy\\\", \\\"Svelte\\\", \\\"TeX\\\", \\\"TSQL\\\", \\\"TypeScript\\\", \\\"unity3d\\\", \\\"visualization\\\", \\\"vr\\\", \\\"Game Development\\\", \\\"UX\\\", \\\"SCRUM\\\", \\\"CAD\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[\n    \"PCB Design\",\n    \"EtherCat\",\n    \"Profinet\",\n    \"C\",\n    \"C#\",\n    \"PowerShell\",\n    \"Python\"\n]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n          Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n          Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n          if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n          Feel free to mention the company name and job title. \\n          Here is the job post description. \\n           Electrical Engineer at Lego (Epico) \\n          ------------------\\n          consider the following job positions:\\n          <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n          ------------------\\n          consider the following education:\\n          <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n          ------------------\\n          consider the following projects:\\n          <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n          ------------------\\n          make it short. its for a cv intro section. max 4 sentences.\\n          \"], {}]": "As a Bachelor of Electrical Engineering from Syddansk Universitet with a Master of Earth and Space Physics and Engineering from Danmarks Tekniske Universitet, I possess a robust foundation in technical engineering principles complemented by hands-on project experience in electronics and software development. My involvement in multidisciplinary projects such as the RPI wildlife tracker and HuntingTrainerVR has honed my ability to develop and optimize technological solutions that are both innovative and practical. At Lego (Epico), I am eager to leverage my technical acumen and creative problem-solving skills to contribute to groundbreaking projects that inspire learning and creativity in young minds. I am particularly excited about integrating my knowledge of automation and digital systems to enhance product designs that enrich the user experience at Lego.",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            could you focus more on my testing abilities within software an how that can be applied in hardware?\\n            ------------------\\n            Here is the job post. \\n            Electrical Engineer at Lego (Epico) \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "Applying your software testing abilities in hardware, particularly in an Electrical Engineer role at Lego (Epico), would involve translating your extensive experience in backend development, data engineering, and analysis into the testing and quality assurance of electrical systems and consumer electronics. By understanding software ecosystems, you can effectively manage hardware interfaces and ensure system stability and efficiency. Projects such as \"rpi-window-controller\" and \"RPI_wildlife_tracker\" highlight your capability in integrating software commands with hardware responses, essential for developing and testing new electronic products. Additionally, your practical knowledge from projects in diverse sectors complements the innovative testing processes that are critical in product development cycles at Lego, ensuring robust, user-friendly, and safe electrical designs.",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            could you focus more on my testing abilities within software an how that can be applied in hardware?\\n            ------------------\\n            Here is the job post. \\n            Electrical Engineer at Lego (Epico) \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "With a Master\u2019s in Earth and Space Physics and a Bachelor\u2019s in Electrical Engineering, complemented by extensive project experience in software testing, I am well-prepared to contribute to the Electrical Engineer role at Lego (Epico). My background in software testing, especially in hardware interface projects like rpi-window-controller and RPI_wildlife_tracker, directly aligns with the challenges at Lego, where hardware and software integration is pivotal. My adaptive nature and strong problem-solving skills, fortified by diverse software environments including Azure and Django, enable me to tackle complex engineering problems efficiently. Additionally, my enthusiasm for innovative technologies and continuous learning will be beneficial in keeping up with Lego\u2019s pioneering and dynamic engineering projects.",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            could you focus more on my testing abilities within software an how that can be applied in hardware?\\r\\n\\r\\ndont focus so much on the projects\\n            ------------------\\n            Here is the job post. \\n            Electrical Engineer at Lego (Epico) \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "As an experienced engineer with a strong background in both software testing and electrical engineering, I am eager to contribute my skills to Lego's Epico team. My expertise in transitioning software testing methodologies to hardware environments makes me a unique asset, particularly in troubleshooting and enhancing the reliability of electronic systems. At Lego, I am excited to apply my analytical and adaptive capabilities to ensure the highest quality in innovative toy designs. Given my keen attention to detail and a proactive approach, I am confident in my ability to support Lego's commitment to creating outstanding and engaging user experiences.",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            could you focus more on my testing abilities within software an how that can be applied in hardware?\\r\\n\\r\\ndont focus so much on the projects, write everything in capital\\n            ------------------\\n            Here is the job post. \\n            Electrical Engineer at Lego (Epico) \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "AS AN ELECTRICAL ENGINEER WITH A ROBUST SOFTWARE TESTING BACKGROUND AND EXPERTISE IN HARDWARE APPLICATIONS, I AM EXCITED TO BRING MY SKILLS TO LEGO (EPICO). MY EXPERIENCE IN VARIOUS SOFTWARE DEVELOPMENT ROLES ENHANCES MY CAPABILITY TO EFFICIENTLY TEST AND IMPROVE HARDWARE SYSTEMS, BRIDGING ANY GAPS BETWEEN THESE TWO DISCIPLINES. ADDITIONALLY, MY EDUCATION IN ELECTRICAL ENGINEERING AND FLEXIBILITY IN LEARNING NEW TECHNOLOGIES POSITION ME AS AN IDEAL CANDIDATE TO INNOVATE AND OPTIMIZE PRODUCT DEVELOPMENT PROCESSES. I AM KEEN TO CONTRIBUTE TO LEGO'S LEGACY OF CREATIVITY AND QUALITY BY LEVERAGING MY TESTING ACUMEN TO ENSURE EXCEPTIONAL PRODUCT STANDARDS.",
  "ask_question__[[\"LlmConnector\", \"\\n        sort these competencies by attractiveness for this job, focus on the title and tell me what skills \\n        are relevant for this job. also look at the skills mentioned in the job description, \\n        and if there are similar skill, then put them in the top. \\n\\n        Job decription:\\n        Join the Factbird Team and Take Flight into a World of Data Revolution! \\ud83d\\ude80\\r\\n\\r\\nAt Factbird, we're on a mission to transform data collection and production monitoring, empowering organizations worldwide with the transformative power of data.\\r\\n\\r\\nAs a Full Stack Engineer in our Cloud Development Team, you'll be an integral part of our team, working with cutting-edge technologies like TypeScript, React, Node.js, and Rust\\r\\n\\r\\nOur passion lies in eliminating friction in production processes for companies across the globe. Together, we're building a powerful plug-and-play solution that reshapes resource allocation and decision-making processes everywhere.\\r\\n\\r\\n \\r\\n\\r\\nA day in the life of a Full-stack Software Engineer\\r\\n\\r\\nA day in your life as Full-stack Engineer with us will be anything but ordinary: Your typical work week would include:\\r\\n\\r\\nYou will write, review, and maintain code in languages such as TypeScript and Rust.\\r\\nYou will collaborate closely with customers and colleagues to understand the problems we want to solve and explore how to solve them.\\r\\nYou will open Pull Requests to implement new features to expand the Factbird platform.\\r\\nYou will design solutions with your team to tackle engineering issues related to scalability, unique IoT challenges, and UX improvements.\\r\\nYou will work with a mentor to ensure that you thrive and develop professionally and personally.\\r\\n \\r\\n\\r\\nAnd here's the best part \\u2013 at Factbird, merit matters more than seniority. \\r\\n\\r\\nYour opinions will be valued, and your contributions will be celebrated. We believe in fostering an inclusive, flexible, and growth-oriented environment right here in vibrant Copenhagen. We are guided in our work, decisions, and unique culture by our values.  We develop talent.  We create trust, we thrive together.\\r\\n\\r\\nTo thrive with us, we're looking for developers who genuinely care about shipping top-notch software. Even if you don't tick all the boxes, we'd love to hear from you! \\r\\n\\r\\n \\r\\n\\r\\nHere's what we'd love to see in you:\\r\\n\\r\\nThe perfect applicant for us has experience with some, or all, parts of the tech stack, a good problem-solving mindset, and a desire for creating user-friendly products that have an impact in the real world.\\r\\n\\r\\nThere are only a handful of people who meet all qualifications. We care most about developers that have a track record of caring genuinely about shipping software. Either way, we want to hear from you!\\r\\n\\r\\nA degree in Computer Science or similar or equivalent work experience.\\r\\nExperience with JavaScript and frontend client libraries (e.g., React)\\r\\nExperience with TypeScript and Rust.\\r\\nSQL/NoSQL or general database knowledge.\\r\\nExperience with REST or GraphQL API design.\\r\\nA strong sense of product and an understanding of the human who is using it.\\r\\nStrong communication skills, both written and verbal.\\r\\nAn appreciation for infrastructure and automation\\r\\n \\r\\n\\r\\nIf the above doesn\\u2019t fit you, then maybe some of the following does:\\r\\n\\r\\nFamiliarity with any of the following: serverless, microservices, Docker, GraphQL, CI/CD, SQL, and NoSQL, Git.\\r\\nExperience with AWS.\\r\\nExperience with React.\\r\\nExperience building, operating, and maintaining scalable services.\\r\\nExperience with open-source contributions.\\r\\n \\r\\n\\r\\nA little about us \\r\\n\\r\\nFactbird is a game-changing end-to-end manufacturing intelligence solution that simplifies data gathering and analysis for all manufacturers. With this solution at your fingertips, you can finally take charge of your manufacturing efficiency and redefine the boundaries of success. Factbird, in business since 2015, is now used in over 25 countries worldwide and trusted by 200+ manufacturers daily, with offices in Denmark and the US. After a recent funding round, we are currently scaling significantly across the globe. \\r\\n\\r\\nOur story is a narrative of ceaseless innovation, collaborative growth, and a resolute commitment to our customers. We've continually evolved, developing our product with our clients' feedback, establishing features and solutions that not only restructure industry operations but cement our position as a trailblazer in manufacturing technology. \\r\\n\\r\\n \\r\\n\\r\\nWe're scaling significantly across the globe after a recent funding round, and we want you to be a part of our exciting journey! \\ud83c\\udf1f Join the Factbird Team, and you'll enjoy\\r\\n\\r\\nFlexible working hours with hybrid work options.\\r\\nSkills development and growth opportunities.\\r\\nA competitive salary to recognize your valuable contributions.\\r\\nA warm and structured onboarding\\r\\nYou choose your gear to work with what inspires you.\\r\\nAn international, diverse, and inclusive culture with colleagues from 17 different nationalities!\\r\\n \\r\\n\\r\\nReady to embark on an incredible journey and shape the future of data collection and production monitoring? \\r\\n\\r\\nDon't miss this exciting opportunity \\u2013 join us now by submitting your application! Plus, feel free to share this awesome chance with anyone who'd be a perfect fit! \\ud83c\\udf20\\r\\n\\r\\nOur interview process is a breeze \\u2013 it starts with a chat with our recruiter, followed by one technical interview, and culminates with a talk with our leadership team. Got any questions or need more details? Reach out to Khristel Marie Aparicio at khma@factbird.com\\n        --------------------\\n        Competencies:        \\n        [\\\"AI\\\", \\\"ASP\\\", \\\"azuredevops\\\", \\\"Azure Service Bus\\\", \\\"Batchfile\\\", \\\"C\\\", \\\"C#\\\", \\\"CSS\\\", \\\"django\\\", \\\"Dockerfile\\\", \\\"economy\\\", \\\"EtherCat\\\", \\\"HLSL\\\", \\\"HTML\\\", \\\"hunting\\\", \\\"JavaScript\\\", \\\"Jupyter Notebook\\\", \\\"llm\\\", \\\"Makefile\\\", \\\"MS SQL Server\\\", \\\"oath2\\\", \\\"Pandas\\\", \\\"panel\\\", \\\"PCB Design\\\", \\\"PostGIS\\\", \\\"Postgres\\\", \\\"PowerShell\\\", \\\"Profinet\\\", \\\"Python\\\", \\\"QGIS\\\", \\\"Qt\\\", \\\"REST API\\\", \\\"Rich Text Format\\\", \\\"SCSS\\\", \\\"ShaderLab\\\", \\\"Shell\\\", \\\"SQLAlchemy\\\", \\\"Svelte\\\", \\\"TeX\\\", \\\"TSQL\\\", \\\"TypeScript\\\", \\\"unity3d\\\", \\\"visualization\\\", \\\"vr\\\", \\\"Game Development\\\", \\\"UX\\\", \\\"SCRUM\\\", \\\"CAD\\\", \\\"AI\\\", \\\"ASP\\\", \\\"azuredevops\\\", \\\"Azure Service Bus\\\", \\\"Batchfile\\\", \\\"Bokeh\\\", \\\"C\\\", \\\"C#\\\", \\\"CAD\\\", \\\"CNN\\\", \\\"CSS\\\", \\\"Dash\\\", \\\"Databricks\\\", \\\"Delta Parquet\\\", \\\"django\\\", \\\"Docker\\\", \\\"Dockerfile\\\", \\\"economy\\\", \\\"Electronics\\\", \\\"EtherCat\\\", \\\"Game Development\\\", \\\"Geohashing\\\", \\\"GeoSpark\\\", \\\"Git\\\", \\\"Groovy\\\", \\\"HLSL\\\", \\\"HTML\\\", \\\"hunting\\\", \\\"JavaScript\\\", \\\"Jira\\\", \\\"Jupyter Notebook\\\", \\\"K8S\\\", \\\"llm\\\", \\\"Makefile\\\", \\\"MS SQL Server\\\", \\\"oath2\\\", \\\"Oracle\\\", \\\"Pandas\\\", \\\"panel\\\", \\\"PCB Design\\\", \\\"PostGIS\\\", \\\"Postgres\\\", \\\"PowerShell\\\", \\\"Profinet\\\", \\\"Python\\\", \\\"python3\\\", \\\"QGIS\\\", \\\"Qt\\\", \\\"REST\\\", \\\"REST API\\\", \\\"Rich Text Format\\\", \\\"SCRUM\\\", \\\"SCSS\\\", \\\"ShaderLab\\\", \\\"Shell\\\", \\\"Spark\\\", \\\"SQLAlchemy\\\", \\\"SQLite\\\", \\\"Streamlit\\\", \\\"Svelte\\\", \\\"TeX\\\", \\\"TSQL\\\", \\\"TypeScript\\\", \\\"unity3d\\\", \\\"UX\\\", \\\"visualization\\\", \\\"vr\\\"]\\n        --------------------\\n        it should be formattet as json as a list of strings, and the response should only include the json list, like this:\\n\\n        [\\\"Python\\\", \\\"Data engineering\\\", \\\"Machine learning\\\"]\\n\\n        \"], {}]": "```json\n[\n    \"TypeScript\",\n    \"JavaScript\",\n    \"React\",\n    \"Rust\",\n    \"Node.js\",\n    \"REST API\",\n    \"GraphQL\",\n    \"Docker\",\n    \"SQL\",\n    \"NoSQL\",\n    \"Git\",\n    \"AWS\",\n    \"UX\",\n    \"SCRUM\",\n    \"HTML\",\n    \"CSS\",\n    \"Python\",\n    \"C#\",\n    \"Postgres\",\n    \"MS SQL Server\"\n]\n```",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            dont focus on specific project but refer to technologies that i have been using in my private projects. mention the diversity in competencies, and mention that i am a good match for the company in a broader sense since i cover IOT, electronics, software development and data engineering. also mention my interest in learning rust\\n            ------------------\\n            Here is the job post. \\n            Full Stack Developer at Factbird \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "With a robust foundation in electrical engineering and a Master\u2019s degree in Earth and Space Physics and Engineering, my diverse project portfolio spans backend development, data engineering, and GIS applications. As an avid technologist with competencies across IoT, electronics, software development, and data engineering, I am confident in my ability to contribute dynamically to Factbird as a Full Stack =\n\nDeveloper. My proactive engagement with emerging technologies, including my current interest in learning Rust, complements my ability to adapt and innovate within tech-centric roles. Factbird\u2019s commitment to cutting-edge solutions aligns perfectly with my skills and my enthusiasm for pushing technological boundaries in practical and impactful ways.\n",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            dont focus on specific project but refer to technologies that i have been using in my private projects. mention the diversity in competencies, and mention that i am a good match for the company in a broader sense since i cover IOT, electronics, software development and data engineering. also mention my interest in learning rust, mention my frontend experience in various other formats like panel, dash, Qt, xamarin, svelte, with emphasis on knowledge transfer to javascript web developemnt.\\n            ------------------\\n            Here is the job post. \\n            Full Stack Developer at Factbird \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "As a multidimensional Full Stack Developer, I bring a robust array of technical expertise to Factbird that aligns closely with the demands of today's dynamic IT environments. With a background enriched by diverse projects such as IoT applications, electronics, and software development, complemented by proficiency in data engineering, I am primed to contribute holistically to your technological infrastructure. My commitment to expanding my skills is demonstrated by my ongoing exploration of Rust, coupled with comprehensive experience across frontend technologies including JavaScript, Svelte, and Xamarin, ensuring seamless transition and integration into various development frameworks. I am excited to leverage this broad spectrum of competencies at Factbird, fostering innovation and driving transformative solutions in your operations.",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            dont focus on specific project but refer to technologies that i have been using in my private projects. mention the diversity in competencies, and mention that i am a good match for the company in a broader sense since i cover IOT, electronics, software development and data engineering. also mention my willingness to learn rust, mention my frontend experience in various other formats like panel, dash, Qt, xamarin, svelte, with emphasis on similarities to javascript web developemnt. \\r\\n\\r\\nmake it more casual.\\n            ------------------\\n            Here is the job post. \\n            Full Stack Developer at Factbird \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "As an adept Full Stack Developer with a robust foundation in IoT, electronics, software development, and data engineering, my diverse skill set aligns well with the innovative environment at Factbird. My experience spans multiple front-end technologies such as Panel, Dash, Qt, Xamarin, and Svelte that enhance my frontend capabilities built on a JavaScript framework. Eager to further my expertise, I am keen on learning Rust and applying it to real-world solutions. My adaptable and creative approach, complemented by a broad technological background, positions me as a valuable asset to your team, ready to tackle diverse challenges and contribute effectively.\n",
  "ask_question__[[\"LlmConnector\", \"Question:\\n            Write a intro phrase for my cv of how i can contribute to this job. 4 lines of why im a good fit for this job.\\n            Please dont overexaggerate, just be honest, based on what you know about me, jobs and projects,\\n            if im not a great fit, just say so, but be constructive, about other things that i can contribute with.\\n            Feel free to mention the company name and job title.\\n            please direct it in the focus of:\\n            \\n            dont focus on specific project but refer to technologies that i have been using in my private projects. mention the diversity in competencies, and mention that i am a good match for the company in a broader sense since i cover IOT, electronics, software development and data engineering. also mention my willingness to learn rust, mention my frontend experience in various other formats like panel, dash, Qt, xamarin, svelte, with emphasis on similarities to javascript web developemnt. \\r\\n\\r\\nmake it more casual. lower the lix number, shorter sentences.\\n            ------------------\\n            Here is the job post. \\n            Full Stack Developer at Factbird \\n            ------------------\\n            consider the following job positions:\\n            <QuerySet [<ProjectModel: BirdClassification>, <ProjectModel: build-it>, <ProjectModel: ChangeDetection>, <ProjectModel: co-opinion>, <ProjectModel: cv-builder>, <ProjectModel: development-workforce>, <ProjectModel: django-json2model>, <ProjectModel: GeoFileHandle>, <ProjectModel: gotta-process-em-all>, <ProjectModel: HuntingTrainerVR>, <ProjectModel: meta-data-client>, <ProjectModel: MetaDataApi>, <ProjectModel: NaGeoS_lib>, <ProjectModel: open-collective>, <ProjectModel: optimize-life>, <ProjectModel: PersonalDataApp>, <ProjectModel: rpi-window-controller>, <ProjectModel: RPI_wildlife_tracker>]>\\n            ------------------\\n            consider the following education:\\n            <QuerySet [<CompetencyModel: AI>, <CompetencyModel: ASP>, <CompetencyModel: azuredevops>, <CompetencyModel: Azure Service Bus>, <CompetencyModel: Batchfile>, <CompetencyModel: C>, <CompetencyModel: C#>, <CompetencyModel: CSS>, <CompetencyModel: django>, <CompetencyModel: Dockerfile>, <CompetencyModel: economy>, <CompetencyModel: EtherCat>, <CompetencyModel: HLSL>, <CompetencyModel: HTML>, <CompetencyModel: hunting>, <CompetencyModel: JavaScript>, <CompetencyModel: Jupyter Notebook>, <CompetencyModel: llm>, <CompetencyModel: Makefile>, <CompetencyModel: MS SQL Server>, '...(remaining elements truncated)...']>\\n            ------------------\\n            consider the following projects:\\n            <QuerySet [<EducationModel: Master of Earth and Space Physics and Engineering at Danmarks Tekniske Universitet>, <EducationModel: Bachelor of Electrical Engineering at Syddansk Universitet>, <EducationModel: HTX at Vejle Tekniske Gymnasium>]>\\n            ------------------\\n            consider the following profile description: \\n            I have been working on various projects ranging from backend development to data engineering to data analysis. Mostly within engineering and energy sectors. I have a bit of GIS experience from various projects, well supported by my education in data processing within geospatial and remote sensing diciplines. Now adays its hard to not get a bit of cloud and devops under the skin as well. I am quite adaptive in terms of skills and competences, and not afraid to start out something that i might not know much about. In terms of personality, according to the \\\"Insights\\\" profile test, i am the \\\"Helping Inspirer\\\". creative, energetic and currious type. Sometimes a bit too quick and intuitive. But it has its qualities too.\\n            make it short. its for a cv intro section. max 4 sentences.\\n        \"], {}]": "I'm excited about the opportunity to bring my diverse skill set to Factbird as a Full Stack Developer. My experience spans IoT, electronics, software development, and data engineering, which aligns well with the needs of your company. I have a solid foundation in frontend technologies including JavaScript and various frameworks such as Dash, Qt, and Xamarin, and I\u2019m eager to expand my capabilities in Rust. Adaptable and enthusiastic, I am ready to contribute effectively across multiple domains within Factbird, leveraging my broad competences to drive innovative solutions.",
  "ask_question__[[\"LlmConnector\", \"\\n        Extract job positions from this pdf. it has to be stored in json format, with these fields, \\n        please save dates as yyyy-mm-dd, just assume first in month if day is not given.\\n        dict_keys(['job_position_id', 'title', 'company', 'start_date', 'end_date', 'location', 'description', 'competencies'])\\n        Job positions can be found in the following text:\\n        ------------------\\n        William Sandvej Experience\\nHansen\\ndec22-okt23 DataEngineer(Freelance) Energinet\\nData Engineer \\u2022 Orchestrated a data project at Energinet to manage extensive\\ndatasets from Denmark\\u2019s energy island, ensuring data reception,\\nquality control, and distribution to stakeholders, using Azure Data\\n\\uf10b\\nfactoryandBlobStorage.\\n+4540371757\\n\\u2022 Utilized Spark and Databricks for scalable processing of diverse\\n\\uf003 binary offshore sensor data, accommodating various formats like\\ngrusinator@gmail.com GDB,DFSU,segy,andxtf.\\n\\u2022 ImplementedSedona(GeoSpark)withinSparktosupportgeospa-\\n\\uf0e1\\n/in/william-sandvej-hansen tialdata,enablingefficientstorageinDeltaParquetformatandop-\\ntimizing read performance through spatial partitioning with geo-\\n\\uf09b\\ngrusinator hashing.\\nmar20-nov22DataEngineer \\u00d8rsted\\n\\u2022 Developed a Python-based data validation component within data\\nSkills\\npipelines,utilizingPandasandintegratedwithAzureServiceBus.\\n\\u2022 Engaged in data modeling with MS SQL Server and REST APIs to\\nOverview\\nenhancedataaccessibilityforanalyticstools.\\n\\u2022 Streamlined database schema iteration using SQLAlchemy and\\nSQLite, simulating the production environment for reliable pre-\\nDatabricks\\ndeploymenttesting.\\nSoftware\\n\\u2022 CraftedanalyticsandvisualizationtoolswithStreamlit,Panel,Dash,\\nDev.\\nandBokeh,enablingengineerstoderiveinsightsfromdata.\\nData\\nAzure\\nEngineering nov18-nov19ITConsultant Netcompany\\nMachine \\u2022 Collaboratedonkeyprojects,contributingtosoftwaredevelopment\\nLearning andsystemsintegration.\\nDevOps\\nsep16-mar18SoftwareDeveloper Niras\\n\\u2022 Processed geospatial data using PostgreSQL and Pandas, and ap-\\nProgramming pliedmachinelearningforimageclassificationtasks.\\n\\u2022 Employed CNNs to classify buildings in orthophotos, aiding a na-\\nPython tionalgeocodingproject\\u2019squalityassurance.\\n0LOC 5000LOC\\n\\u2022 Designedanddevelopedapipelinetoconvertpointclouddatainto\\npyspark actionableinsightsforinfrastructuremaintenance.\\n\\u2022 Created algorithms for detecting and classifying bird species\\nfrom aerial imagery to analyze behavioral patterns.\\nSQL\\nEducation\\nADF\\n2014-2016 MSc.,EarthandSpacePhysicsandEngineering DTU\\nremote sensing, photogrammetry, image processing and GPS. Spa-\\ntial and temporal storage and analysis of data using databases and\\nstatisticalmodellingandmachinelearning.\\n2010-2014 BEng.,ElectricalEngineering SDU\\nElectricalsignalprocessingandHFcircuitdesign\\nOther Projects\\n\\u2022 Dansk Milj\\u00f8 Analyse: Deep learning based waveform classification on chemical\\nspectrogramsinordertodetermineconcentrationsofspecificcompoundsinsam-\\nples.\\nCourses\\n\\u2022 IDABigDataCourse: HandsonwithHadoopandSpark.\\n        \"], {}]": "```json\n[\n    {\n        \"job_position_id\": 1,\n        \"title\": \"Data Engineer\",\n        \"company\": \"Energinet\",\n        \"start_date\": \"2022-12-01\",\n        \"end_date\": \"2023-10-01\",\n        \"location\": \"Denmark\",\n        \"description\": \"Orchestrated a data project at Energinet to manage extensive datasets from Denmark\u2019s energy island, ensuring data reception, quality control, and distribution to stakeholders, using Azure Data factory and Blob Storage. Utilized Spark and Databricks for scalable processing of diverse binary offshore sensor data, accommodating various formats like GDB, DFSU, segy, and xtf. Implemented Sedona (GeoSpark) within Spark to support geospatial data, enabling efficient storage in Delta Parquet format and optimizing read performance through spatial partitioning with geohashing.\",\n        \"competencies\": [\"Azure Data Factory\", \"Blob Storage\", \"Spark\", \"Databricks\", \"GeoSpark\", \"Data Management\", \"Geospatial Data Processing\"]\n    },\n    {\n        \"job_position_id\": 2,\n        \"title\": \"Data Engineer\",\n        \"company\": \"\u00d8rsted\",\n        \"start_date\": \"2020-03-01\",\n        \"end_date\": \"2022-11-01\",\n        \"location\": \"Denmark\",\n        \"description\": \"Developed a Python-based data validation component within data pipelines, utilizing Pandas and integrated with Azure Service Bus. Engaged in data modeling with MS SQL Server and REST APIs to enhance data accessibility for analytics tools. Streamlined database schema iteration using SQLAlchemy and SQLite, simulating the production environment for reliable pre-deployment testing. Crafted analytics and visualization tools with Streamlit, Panel, Dash, and Bokeh, enabling engineers to derive insights from data.\",\n        \"competencies\": [\"Python\", \"Pandas\", \"Azure Service Bus\", \"MS SQL Server\", \"REST APIs\", \"SQLAlchemy\", \"SQLite\", \"Data Modeling\", \"Streamlit\", \"Panel\", \"Dash\", \"Bokeh\", \"Data Validation\"]\n    },\n    {\n        \"job_position_id\": 3,\n        \"title\": \"IT Consultant\",\n        \"company\": \"Netcompany\",\n        \"start_date\": \"2018-11-01\",\n        \"end_date\": \"2019-11-01\",\n        \"location\": \"Denmark\",\n        \"description\": \"Collaborated on key projects, contributing to software development and systems integration.\",\n        \"competencies\": [\"Software Development\", \"Systems Integration\"]\n    },\n    {\n        \"job_position_id\": 4,\n        \"title\": \"Software Developer\",\n        \"company\": \"Niras\",\n        \"start_date\": \"2016-09-01\",\n        \"end_date\": \"2018-03-01\",\n        \"location\": \"Denmark\",\n        \"description\": \"Processed geospatial data using PostgreSQL and Pandas, and applied machine learning for image classification tasks. Employed CNNs to classify buildings in orthophotos, aiding a national geocoding project\u2019s quality assurance. Designed and developed a pipeline to convert point cloud data into actionable insights for infrastructure maintenance. Created algorithms for detecting and classifying bird species from aerial imagery to analyze behavioral patterns.\",\n        \"competencies\": [\"PostgreSQL\", \"Pandas\", \"Machine Learning\", \"CNNs\", \"Geospatial Data Processing\", \"Image Classification\", \"Point Cloud Data\", \"Algorithm Development\"]\n    }\n]\n```",
  "ask_question__[[\"LlmConnector\", \"\\n         Extract education from this pdf. it has to be stored in json format, with these fields:\\n         please save dates as yyyy-mm-dd, just assume first in month if day is not given.\\n         dict_keys(['education_id', 'degree', 'school', 'start_date', 'end_date', 'description', 'location'])\\n         Education can be found in the following text:\\n         ------------------\\n         William Sandvej Experience\\nHansen\\ndec22-okt23 DataEngineer(Freelance) Energinet\\nData Engineer \\u2022 Orchestrated a data project at Energinet to manage extensive\\ndatasets from Denmark\\u2019s energy island, ensuring data reception,\\nquality control, and distribution to stakeholders, using Azure Data\\n\\uf10b\\nfactoryandBlobStorage.\\n+4540371757\\n\\u2022 Utilized Spark and Databricks for scalable processing of diverse\\n\\uf003 binary offshore sensor data, accommodating various formats like\\ngrusinator@gmail.com GDB,DFSU,segy,andxtf.\\n\\u2022 ImplementedSedona(GeoSpark)withinSparktosupportgeospa-\\n\\uf0e1\\n/in/william-sandvej-hansen tialdata,enablingefficientstorageinDeltaParquetformatandop-\\ntimizing read performance through spatial partitioning with geo-\\n\\uf09b\\ngrusinator hashing.\\nmar20-nov22DataEngineer \\u00d8rsted\\n\\u2022 Developed a Python-based data validation component within data\\nSkills\\npipelines,utilizingPandasandintegratedwithAzureServiceBus.\\n\\u2022 Engaged in data modeling with MS SQL Server and REST APIs to\\nOverview\\nenhancedataaccessibilityforanalyticstools.\\n\\u2022 Streamlined database schema iteration using SQLAlchemy and\\nSQLite, simulating the production environment for reliable pre-\\nDatabricks\\ndeploymenttesting.\\nSoftware\\n\\u2022 CraftedanalyticsandvisualizationtoolswithStreamlit,Panel,Dash,\\nDev.\\nandBokeh,enablingengineerstoderiveinsightsfromdata.\\nData\\nAzure\\nEngineering nov18-nov19ITConsultant Netcompany\\nMachine \\u2022 Collaboratedonkeyprojects,contributingtosoftwaredevelopment\\nLearning andsystemsintegration.\\nDevOps\\nsep16-mar18SoftwareDeveloper Niras\\n\\u2022 Processed geospatial data using PostgreSQL and Pandas, and ap-\\nProgramming pliedmachinelearningforimageclassificationtasks.\\n\\u2022 Employed CNNs to classify buildings in orthophotos, aiding a na-\\nPython tionalgeocodingproject\\u2019squalityassurance.\\n0LOC 5000LOC\\n\\u2022 Designedanddevelopedapipelinetoconvertpointclouddatainto\\npyspark actionableinsightsforinfrastructuremaintenance.\\n\\u2022 Created algorithms for detecting and classifying bird species\\nfrom aerial imagery to analyze behavioral patterns.\\nSQL\\nEducation\\nADF\\n2014-2016 MSc.,EarthandSpacePhysicsandEngineering DTU\\nremote sensing, photogrammetry, image processing and GPS. Spa-\\ntial and temporal storage and analysis of data using databases and\\nstatisticalmodellingandmachinelearning.\\n2010-2014 BEng.,ElectricalEngineering SDU\\nElectricalsignalprocessingandHFcircuitdesign\\nOther Projects\\n\\u2022 Dansk Milj\\u00f8 Analyse: Deep learning based waveform classification on chemical\\nspectrogramsinordertodetermineconcentrationsofspecificcompoundsinsam-\\nples.\\nCourses\\n\\u2022 IDABigDataCourse: HandsonwithHadoopandSpark.\\n         \"], {}]": "```json\n[\n    {\n        \"education_id\": 1,\n        \"degree\": \"MSc., Earth and Space Physics and Engineering\",\n        \"school\": \"DTU\",\n        \"start_date\": \"2014-09-01\",\n        \"end_date\": \"2016-05-01\",\n        \"description\": \"Specialized in remote sensing, photogrammetry, image processing and GPS. Spatial and temporal storage and analysis of data using databases and statistical modelling and machine learning.\",\n        \"location\": \"\"\n    },\n    {\n        \"education_id\": 2,\n        \"degree\": \"BEng., Electrical Engineering\",\n        \"school\": \"SDU\",\n        \"start_date\": \"2010-09-01\",\n        \"end_date\": \"2014-05-01\",\n        \"description\": \"Focused on electrical signal processing and HF circuit design.\",\n        \"location\": \"\"\n    }\n]\n```"
}